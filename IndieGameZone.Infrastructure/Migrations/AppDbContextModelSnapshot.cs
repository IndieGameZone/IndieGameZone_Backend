// <auto-generated />
using System;
using IndieGameZone.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IndieGameZone.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Achievements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProgressLevel")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fef0c70d-cf7b-4c90-9865-383e660fda8a"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/firstgame.png",
                            IsDeleted = false,
                            Name = "First Purchase",
                            ProgressLevel = 1.0,
                            Type = "GamePurchase"
                        },
                        new
                        {
                            Id = new Guid("56e5cd8d-2d46-45dc-9006-f71920beea40"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/10games.png",
                            IsDeleted = false,
                            Name = "Buy 10 Games",
                            ProgressLevel = 10.0,
                            Type = "GamePurchase"
                        },
                        new
                        {
                            Id = new Guid("9c60bc27-9c8a-4be3-9e0d-1f4e96cb59a7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/50games.png",
                            IsDeleted = false,
                            Name = "Buy 50 Games",
                            ProgressLevel = 50.0,
                            Type = "GamePurchase"
                        },
                        new
                        {
                            Id = new Guid("b0ea7c96-6d5c-4199-9029-7f04e7502f66"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/firstposts.png",
                            IsDeleted = false,
                            Name = "Make first Post",
                            ProgressLevel = 1.0,
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("5291fbd1-9926-4904-92bc-7f36c738c189"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/10posts.png",
                            IsDeleted = false,
                            Name = "Make 10 Posts",
                            ProgressLevel = 10.0,
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("47c0b28f-43d2-496e-bfcb-f9df5aa2048d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/50posts.png",
                            IsDeleted = false,
                            Name = "Make 50 Posts",
                            ProgressLevel = 50.0,
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("f3e1b3e3-9ac3-41e3-83a6-83b44b76446b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/firstcomment.png",
                            IsDeleted = false,
                            Name = "Comment first time",
                            ProgressLevel = 1.0,
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("d55f9b9a-d660-4c9a-bc35-94d7ef5a4eb3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/10comments.png",
                            IsDeleted = false,
                            Name = "Comment 10 Times",
                            ProgressLevel = 10.0,
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("2190f97e-1533-4c91-9152-f7ae9ec6f8c0"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/50comments.png",
                            IsDeleted = false,
                            Name = "Comment 50 Times",
                            ProgressLevel = 50.0,
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("8e8cbf44-001f-4060-bd8a-bc6213a81cc0"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/firstlike.png",
                            IsDeleted = false,
                            Name = "Like first Post",
                            ProgressLevel = 1.0,
                            Type = "Like"
                        },
                        new
                        {
                            Id = new Guid("10b1990c-cce0-45ed-bcfd-d86ed7a3ae1c"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/10likes.png",
                            IsDeleted = false,
                            Name = "Like 10 Posts",
                            ProgressLevel = 10.0,
                            Type = "Like"
                        },
                        new
                        {
                            Id = new Guid("d49ff353-2b75-4879-8a0b-4d7c16ed4a69"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/50likes.png",
                            IsDeleted = false,
                            Name = "Like 50 Posts",
                            ProgressLevel = 50.0,
                            Type = "Like"
                        },
                        new
                        {
                            Id = new Guid("b83dc1f6-cc35-4955-9a5d-3ae89a90e5d6"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/5dev.png",
                            IsDeleted = false,
                            Name = "Follow 5 Developers",
                            ProgressLevel = 5.0,
                            Type = "Follow"
                        },
                        new
                        {
                            Id = new Guid("b186aeb1-033f-4937-a24c-d11b1989e7e2"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/10dev.png",
                            IsDeleted = false,
                            Name = "Follow 10 Developers",
                            ProgressLevel = 10.0,
                            Type = "Follow"
                        },
                        new
                        {
                            Id = new Guid("5a8d9a1a-4b12-464b-8a70-d0309c3f355d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/50dev.png",
                            IsDeleted = false,
                            Name = "Follow 50 Developers",
                            ProgressLevel = 50.0,
                            Type = "Follow"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ActivationKeys", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("Key");

                    b.ToTable("ActivationKeys");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.AgeRestrictions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AgeRestrictions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c91901a1-1b27-4e42-9b6f-869c920b1b1c"),
                            Code = "PEGI 3",
                            Description = "Suitable for all age groups. No sounds or pictures likely to frighten young children.",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            Code = "PEGI 7",
                            Description = "May contain some frightening scenes or sounds.",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("32d6d768-d670-4ef5-acaa-fcfe4c8167d3"),
                            Code = "PEGI 12",
                            Description = "May contain violence of a more graphic nature towards fantasy characters, or mild bad language.",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3df25298-5f31-4639-a3a0-425ae4db72ca"),
                            Code = "PEGI 16",
                            Description = "More realistic violence, sexual activity, use of tobacco or alcohol, and stronger language.",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("92ca7f1e-94c3-4c48-a468-61d3bab8f0b9"),
                            Code = "PEGI 18",
                            Description = "Depictions of gross violence, sexual violence, or content that glamorizes illegal drug use.",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.BanHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BanDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BannedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BannedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UnbanDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BannedByUserId");

                    b.HasIndex("BannedUserId");

                    b.ToTable("BanHistories");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Categories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            IsDeleted = false,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("77c89b32-78e3-4fea-915f-4b8df819ffa2"),
                            IsDeleted = false,
                            Name = "Visual Novel"
                        },
                        new
                        {
                            Id = new Guid("89a4e6d2-2cfe-4474-9b96-6d3595ad4705"),
                            IsDeleted = false,
                            Name = "Role-Playing"
                        },
                        new
                        {
                            Id = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            IsDeleted = false,
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("39b71d75-ed24-461a-8dbf-e4fa9ae425fc"),
                            IsDeleted = false,
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = new Guid("bca8721b-c323-44a1-afcf-876e206ab035"),
                            IsDeleted = false,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            IsDeleted = false,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = new Guid("cd1fb8a2-c34e-4fc4-bbbd-9931a0c6ce0e"),
                            IsDeleted = false,
                            Name = "Interactive Fiction"
                        },
                        new
                        {
                            Id = new Guid("ab34908d-20dc-43bd-b80d-eac5b59d6238"),
                            IsDeleted = false,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = new Guid("4d84bb23-8644-4720-8344-d4a9d0433d35"),
                            IsDeleted = false,
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = new Guid("929c6ef0-41e5-4bc5-9ef9-86f0703b9c20"),
                            IsDeleted = false,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("592e7334-c896-46f6-ad6c-a781a2ab7219"),
                            IsDeleted = false,
                            Name = "Card Game"
                        },
                        new
                        {
                            Id = new Guid("b277ba85-f89b-4617-a464-49cda6e8d387"),
                            IsDeleted = false,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = new Guid("88fd3b90-179a-4c18-8c3a-5f3929992e0a"),
                            IsDeleted = false,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = new Guid("5e1afbc9-31dd-417d-ae49-baa45d6d5797"),
                            IsDeleted = false,
                            Name = "Education"
                        },
                        new
                        {
                            Id = new Guid("a5a8e1af-bbea-4029-99fe-42912e7c7ba2"),
                            IsDeleted = false,
                            Name = "Rhythm"
                        },
                        new
                        {
                            Id = new Guid("3623f541-4b87-4174-bfce-dd2b027c7a33"),
                            IsDeleted = false,
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialPackages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CommercialPackages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("856314ae-b364-4d83-94ba-f11600c88cff"),
                            Description = "Displays a banner on the homepage for 1 day.",
                            Duration = 1,
                            IsDeleted = false,
                            Name = "Homepage Banner - Daily",
                            Price = 20000.0,
                            Type = "HomepageBanner"
                        },
                        new
                        {
                            Id = new Guid("4bfbc5f2-bef6-44ff-a5c4-baaff953f651"),
                            Description = "Displays a banner on the homepage for 7 days.",
                            Duration = 7,
                            IsDeleted = false,
                            Name = "Homepage Banner - Weekly",
                            Price = 80000.0,
                            Type = "HomepageBanner"
                        },
                        new
                        {
                            Id = new Guid("8f451273-fe64-4c67-80e9-84ee20733ddd"),
                            Description = "Displays a banner on the homepage for 30 days.",
                            Duration = 30,
                            IsDeleted = false,
                            Name = "Homepage Banner - Monthly",
                            Price = 310000.0,
                            Type = "HomepageBanner"
                        },
                        new
                        {
                            Id = new Guid("854bb0e5-ecf6-4bc8-a5f7-1d9e27d27e73"),
                            Description = "Displays a banner on a category page for 1 day.",
                            Duration = 1,
                            IsDeleted = false,
                            Name = "Category Banner - Daily",
                            Price = 10000.0,
                            Type = "CategoryBanner"
                        },
                        new
                        {
                            Id = new Guid("0efbfb71-599d-4233-a598-1595615810e1"),
                            Description = "Displays a banner on a category page for 7 days.",
                            Duration = 7,
                            IsDeleted = false,
                            Name = "Category Banner - Weekly",
                            Price = 60000.0,
                            Type = "CategoryBanner"
                        },
                        new
                        {
                            Id = new Guid("a9758e65-b0d6-4dd1-8272-fe1f2cb4794e"),
                            Description = "Displays a banner on a category page for 30 days.",
                            Duration = 30,
                            IsDeleted = false,
                            Name = "Category Banner - Monthly",
                            Price = 230000.0,
                            Type = "CategoryBanner"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialRegistrations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommercialPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CommercialPackageId");

                    b.HasIndex("GameId");

                    b.ToTable("CommercialRegistrations");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Discounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02e6a0ab-2720-4368-8b80-9eb3f46eece0"),
                            EndDate = new DateOnly(2025, 8, 31),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Percentage = 10.0
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.DownloadSlots", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DownloadAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("DownloadSlots");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameCensorLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CensorReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CensorStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CensoredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ModeratorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ModeratorId");

                    b.ToTable("GameCensorLogs");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2212b056-b7e1-4bd4-a258-aae3e24f9a87"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage1.png"
                        },
                        new
                        {
                            Id = new Guid("396cf491-b737-4983-a65e-42ecd36080d7"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage2.png"
                        },
                        new
                        {
                            Id = new Guid("dc5e81ec-24b6-4109-ba9f-e9de4ad9a855"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage3.png"
                        },
                        new
                        {
                            Id = new Guid("81738026-cd42-482c-a692-f080a6fe9240"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage4.png"
                        },
                        new
                        {
                            Id = new Guid("d3e36747-a19a-41ff-b8a1-1c274e378dab"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage5.png"
                        },
                        new
                        {
                            Id = new Guid("358323f5-c335-462d-bdfb-da66adf5c46e"),
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftImage1.png"
                        },
                        new
                        {
                            Id = new Guid("c33745dd-9dcc-49ac-9ad3-d065eb0bdc2e"),
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftImage2.png"
                        },
                        new
                        {
                            Id = new Guid("eda33637-837b-4d9e-a9e0-e634ea5e5607"),
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftImage3.png"
                        },
                        new
                        {
                            Id = new Guid("9aaba048-0753-43db-b1ee-7cd6942a2d2f"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic1.png"
                        },
                        new
                        {
                            Id = new Guid("c8d5b639-cd80-4ae6-8305-c5cd4648c5f3"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic2.png"
                        },
                        new
                        {
                            Id = new Guid("58eae981-bcc4-48d2-bd1b-b075f9b59980"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic3.png"
                        },
                        new
                        {
                            Id = new Guid("54850d1a-24ca-49eb-9d8e-162c4ad97eab"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic4.png"
                        },
                        new
                        {
                            Id = new Guid("53ca6f8b-202c-40f7-abe3-bb160eaad980"),
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher1.png"
                        },
                        new
                        {
                            Id = new Guid("b57b3ebf-a760-48eb-a1e7-4bb9211cd73f"),
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher2.png"
                        },
                        new
                        {
                            Id = new Guid("3944baa5-de3c-4f59-97b7-61788dfb5f55"),
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher3.png"
                        },
                        new
                        {
                            Id = new Guid("4c8f1faf-5027-44f8-8f64-f28a1e076cf9"),
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop1.png"
                        },
                        new
                        {
                            Id = new Guid("f760cd56-8e58-458b-be93-73b5fb74ee25"),
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop2.png"
                        },
                        new
                        {
                            Id = new Guid("9b70f90d-24de-480c-bfb2-fbf995925f9f"),
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop3.png"
                        },
                        new
                        {
                            Id = new Guid("ba06330f-7d31-4eed-bc50-36e1b574d35a"),
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage1.png"
                        },
                        new
                        {
                            Id = new Guid("dcbc392d-22e4-421a-986c-4c572ea2e323"),
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage2.png"
                        },
                        new
                        {
                            Id = new Guid("da252a7b-f0d7-4366-a063-78e115497ac7"),
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage3.png"
                        },
                        new
                        {
                            Id = new Guid("cfde7b79-f05e-41a0-beae-674d20b35fc0"),
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage1.png"
                        },
                        new
                        {
                            Id = new Guid("8a7f73fb-2081-42a6-a6d4-fd7e9e5f223d"),
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage2.png"
                        },
                        new
                        {
                            Id = new Guid("67e0cdec-fd3c-4e8c-b282-51a85d210805"),
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage3.png"
                        },
                        new
                        {
                            Id = new Guid("f8ce5135-b1ad-4c90-b702-bbbb695c22f9"),
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage1.jpg"
                        },
                        new
                        {
                            Id = new Guid("c5bb623b-7740-4153-8217-abce9a26de8a"),
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage2.jpg"
                        },
                        new
                        {
                            Id = new Guid("ab65d3f1-15c1-43e0-9b3d-2920ca0b553f"),
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage3.jpg"
                        },
                        new
                        {
                            Id = new Guid("2505ff71-9cc2-48cc-a98f-8fc26d026dcd"),
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage1.png"
                        },
                        new
                        {
                            Id = new Guid("e02ef39a-48bc-4211-891f-693a70bc9114"),
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage2.png"
                        },
                        new
                        {
                            Id = new Guid("5d1f52f5-022f-44a7-bf55-b7aa97a0375b"),
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage3.png"
                        },
                        new
                        {
                            Id = new Guid("52897bc1-b025-4ba7-b644-7d854b03f534"),
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage1.png"
                        },
                        new
                        {
                            Id = new Guid("3e23cfb8-dc39-47a3-a937-204a462fa5b7"),
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage2.png"
                        },
                        new
                        {
                            Id = new Guid("3f15d5ca-b168-4e2a-b938-a8a1bd20d617"),
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage3.png"
                        },
                        new
                        {
                            Id = new Guid("4b2530c9-aa8f-43af-a87d-e4ded9fe3166"),
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BloodmallImage1.png"
                        },
                        new
                        {
                            Id = new Guid("13977a30-ad13-44e4-9e8e-0c32ef6a5dc2"),
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BloodmallImage2.png"
                        },
                        new
                        {
                            Id = new Guid("7dbbb1d3-75b1-4b98-982e-2380c76bd57a"),
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BloodmallImage3.png"
                        },
                        new
                        {
                            Id = new Guid("c1833d3e-53c0-47e9-b507-e79c7b0f527a"),
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BloodmallImage4.png"
                        },
                        new
                        {
                            Id = new Guid("5d443823-96b2-4455-bd04-37343fbf2366"),
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/ThunderheadImage1.png"
                        },
                        new
                        {
                            Id = new Guid("541c9575-78c9-41fd-854c-4bf68627f744"),
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/ThunderheadImage2.png"
                        },
                        new
                        {
                            Id = new Guid("0218ffa1-8209-491d-811e-d45bac9bb71c"),
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/ThunderheadImage3.png"
                        },
                        new
                        {
                            Id = new Guid("83f8ed84-5823-49d0-b5d6-f90a01c3a29c"),
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/EvaluationImage1.png"
                        },
                        new
                        {
                            Id = new Guid("917ee553-8ab5-4752-8405-ea47e7df422f"),
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/EvaluationImage2.png"
                        },
                        new
                        {
                            Id = new Guid("0032fa4f-99e9-43e7-b9ae-6a7993a34ff0"),
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/EvaluationImage3.png"
                        },
                        new
                        {
                            Id = new Guid("9a4753c5-24b9-47cc-913f-43af84b8ef58"),
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DominoidImage1.png"
                        },
                        new
                        {
                            Id = new Guid("fb436f19-9e53-49d5-bbf6-19901b1c8daa"),
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DominoidImage2.png"
                        },
                        new
                        {
                            Id = new Guid("cfa6dd69-f3fc-426a-86e8-a2c747716a65"),
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DominoidImage3.png"
                        },
                        new
                        {
                            Id = new Guid("fd8619fd-b9d3-4b21-b87b-a28922608b90"),
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DiggingHourImage1.png"
                        },
                        new
                        {
                            Id = new Guid("a9f8354e-fa21-446e-9855-d0053df9ec23"),
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DiggingHourImage2.png"
                        },
                        new
                        {
                            Id = new Guid("20ed51b9-dc67-48b4-a81a-f53d7218de11"),
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DiggingHourImage3.png"
                        },
                        new
                        {
                            Id = new Guid("86180820-1719-4b28-80de-b9717eedbe67"),
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DispatchedImage1.png"
                        },
                        new
                        {
                            Id = new Guid("7a145a91-b1bc-4bd3-9f47-98703f8058b9"),
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DispatchedImage2.png"
                        },
                        new
                        {
                            Id = new Guid("6ffca4ba-8b33-4b76-8ac4-4081d7a20bf9"),
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DispatchedImage3.png"
                        },
                        new
                        {
                            Id = new Guid("b99693a3-a830-4778-9baa-44a723955abd"),
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SecurityBoothImage1.png"
                        },
                        new
                        {
                            Id = new Guid("a81fa98b-dff7-42ea-b03c-8fd4f6f82a2b"),
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SecurityBoothImage2.png"
                        },
                        new
                        {
                            Id = new Guid("2cae4341-bcf2-40b7-b0f3-428375814289"),
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SecurityBoothImage3.png"
                        },
                        new
                        {
                            Id = new Guid("1d734165-1d8a-4d5a-880e-7a16b2e61a3f"),
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/AtlyssImage1.png"
                        },
                        new
                        {
                            Id = new Guid("c3332e27-3588-4e44-a7d7-dab7465aa99a"),
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/AtlyssImage2.png"
                        },
                        new
                        {
                            Id = new Guid("9c723942-11ac-4138-a556-8bad96c7862b"),
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/AtlyssImage3.png"
                        },
                        new
                        {
                            Id = new Guid("004266a3-0eb9-4c24-96e8-bafe8f010660"),
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TomatoImage1.png"
                        },
                        new
                        {
                            Id = new Guid("6f1fa40d-4114-48d6-ac2a-56681d870134"),
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TomatoImage2.png"
                        },
                        new
                        {
                            Id = new Guid("a94ded29-5cc3-4d62-9477-d8bc5f47c525"),
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TomatoImage3.png"
                        },
                        new
                        {
                            Id = new Guid("fb32a2c1-17d7-44f9-8fed-8784790b528f"),
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/LeftoversImage1.png"
                        },
                        new
                        {
                            Id = new Guid("38f9d4cb-2b87-4c8a-ac56-eca779788b34"),
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/LeftoversImage2.png"
                        },
                        new
                        {
                            Id = new Guid("9262c869-8390-4c37-8075-4b3870b92c42"),
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/LeftoversImage3.png"
                        },
                        new
                        {
                            Id = new Guid("a1b57ff9-2689-453e-b82b-85641b627897"),
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheStationImage1.png"
                        },
                        new
                        {
                            Id = new Guid("458a9d32-d71a-4a29-8300-236a3848b7bf"),
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheStationImage2.png"
                        },
                        new
                        {
                            Id = new Guid("4938588a-76a4-47eb-bd3a-3717763fa6da"),
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheStationImage3.png"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameLanguages", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GameLanguages");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GamePlatforms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d05c6b50-5703-4f57-b585-0544df48d340"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "TheDeadseat_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseat_Window.zip",
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 179.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("38fdf771-afec-42fe-8f10-61625d877676"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "MidnightShift_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShift_Window.zip",
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 84.599999999999994,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("2ec38e6e-62d2-4219-bd5f-71657417cbf3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "BrokenRelic_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic_Window.zip",
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 99.299999999999997,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("a3b71542-c3d5-4ee3-a71b-6029c378e246"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "BrokenRelic_Mac.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic_Macos.zip",
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            IsActive = true,
                            PlatformId = new Guid("574cb883-e637-4f18-9518-269e4d22312c"),
                            Size = 99.700000000000003,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("2bdf594b-adf5-49f3-a383-c7edacd2d8bf"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "BrokenRelic_Linux.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic_Linux.zip",
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            IsActive = true,
                            PlatformId = new Guid("db498cbb-c76f-4166-9836-8ecb462419e6"),
                            Size = 100.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("78891725-9915-463d-a2d9-c0ca712a8d71"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Moldwasher_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher_Window.zip",
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 31.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("bb65b97c-f174-4da8-b693-4a3a06425ede"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Latestop_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop_Window.zip",
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 87.599999999999994,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("1b507de8-109d-45e3-8674-0ffb658f710a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "QuietPlace_Window.rar",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlace_Window.rar",
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 58.600000000000001,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("08c611ac-51cd-4f78-a8f6-b002f70bb5aa"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Pacside_Window.rar",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Pacside_Window.rar",
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 163.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("072d0cb8-a3ef-4ad8-a045-571d1361101d"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Sheepy_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Sheepy_Window.zip",
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 239.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("dd1b15c6-badb-49c6-9431-ff2fc7d75cc1"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Daughter_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Daughter_Window.zip",
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 181.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("56f3eb4f-c032-45de-aad6-9c27087d4d29"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Missing_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Missing_Window.zip",
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 138.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("03a718fb-5bcd-454b-b10f-916a4b54b496"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Missing_Mac.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Missing_Mac.zip",
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            IsActive = true,
                            PlatformId = new Guid("574cb883-e637-4f18-9518-269e4d22312c"),
                            Size = 246.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("1ae5ea5b-585a-449c-989c-19e7532b0691"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Bloddymall_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Bloddymall_Window.zip",
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 93.799999999999997,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("a618da0d-95f4-48b8-9660-e7ccdd4c3292"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Bloddymall_Linux.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Bloddymall_Linux.zip",
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            IsActive = true,
                            PlatformId = new Guid("db498cbb-c76f-4166-9836-8ecb462419e6"),
                            Size = 94.900000000000006,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("d61d07d4-264d-4e06-96ba-ae3d11f633e3"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Thunderhead_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Thunderhead_Window.zip",
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 153.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("4b5da214-6421-4ec3-8611-f841da6d0225"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Evaluation_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Evaluation_Window.zip",
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 224.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("fd5d6f74-fd4e-4c48-b820-0334576d8865"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Dominoid_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Dominoid_Window.zip",
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 109.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("78cbada5-4c5b-4337-8fb9-f951d2133e77"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "DiggingHour_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/DiggingHour_Window.zip",
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 48.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("60222ad6-3688-477f-a0d9-92ef64c55297"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Dispatched_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Dispatched_Window.zip",
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 585.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("d4538960-7d26-4aee-8f5e-25856c97d7c9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "SecurityBooth_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/SecurityBooth_Window.zip",
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 127.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("2f6d2107-ac54-4e66-9823-cd40de7aaaf2"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Atlyss_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Atlyss_Window.zip",
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 126.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("5b3e5780-b559-48bc-969b-00c619bb2c16"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Tomato_Window.exe",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Tomato_Window.exe",
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 224.0,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("39dfe4f3-977b-45a4-b922-fb367af80f0c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "Leftovers_Window.zip",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Leftovers_Window.zip",
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 33.799999999999997,
                            Version = ""
                        },
                        new
                        {
                            Id = new Guid("5b87a9fa-bbc2-4dcf-8da4-42822b1654f9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DisplayName = "TheStation_Window.rar",
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheStation_Window.rar",
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            IsActive = true,
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Size = 102.0,
                            Version = ""
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GamePriceLogs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GamePriceLogs");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameRecommendations", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GameRecommendations");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameTags", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("GameTags");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("1c175c84-379e-43dc-a95a-aafd910d6a00")
                        },
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            TagId = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            TagId = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            TagId = new Guid("7d5d4e96-d0fa-440e-914f-1667b6ef54c1")
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            TagId = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3")
                        },
                        new
                        {
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            TagId = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3")
                        },
                        new
                        {
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            TagId = new Guid("ab6e601e-52c3-45dc-97c3-1c6e84732769")
                        },
                        new
                        {
                            GameId = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            TagId = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3")
                        },
                        new
                        {
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            TagId = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3")
                        },
                        new
                        {
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            TagId = new Guid("b9e9a223-25b3-491b-ba92-e185a74d82ab")
                        },
                        new
                        {
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            TagId = new Guid("ab6e601e-52c3-45dc-97c3-1c6e84732769")
                        },
                        new
                        {
                            GameId = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            TagId = new Guid("7d5d4e96-d0fa-440e-914f-1667b6ef54c1")
                        },
                        new
                        {
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            TagId = new Guid("8c202501-893d-427e-9faf-47e2f1d6ba2d")
                        },
                        new
                        {
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            TagId = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac")
                        },
                        new
                        {
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            TagId = new Guid("46c0001e-beb3-4291-885a-f076e53f40fd")
                        },
                        new
                        {
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            TagId = new Guid("6cc4c52b-3b0e-4641-9997-8a1e6c29753b")
                        },
                        new
                        {
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            TagId = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3")
                        },
                        new
                        {
                            GameId = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Games", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgeRestrictionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowDonation")
                        .HasColumnType("bit");

                    b.Property<double>("AverageSession")
                        .HasColumnType("float");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CensorStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CensoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DeveloperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InstallInstruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("NumberOfDownloads")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("RequireActivationKey")
                        .HasColumnType("bit");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VersionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Visibility")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AgeRestrictionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatCoverImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3199),
                            Description = "<h4>Steam release features Hard Mode, as well as double the story!</h4><p>You are in the backseat of your parent's car during a long drive. As your parents begin fighting, your hand-held game is your only source of entertainment. But the game begins to mirror real life... Collect items on your hand-held game to send them to the backseat and use them to defend against the monstrosity that's trying to make its way into the backseat with you.</p><h4>SURVIVE THE NIGHT DRIVE</h4><p>Your drive home from grandma's is interrupted by an unexpected detour. Play a hand-held game in the backseat as your parent's drive.</p><h4>RETRO GAMING</h4><p>Your hand-held game is beginning to mirror reality... Supplies you collect in the game will be sent to the backseat.</p><h4>TRAPPED IN THE DEADSEAT</h4><p>A deadly monstrosity wants to join you in the backseat. Juggle your supplies and defend all sides. In this car, there&rsquo;s only onwards to drive, and nowhere to run.</p><h4>THE STORY</h4><p>Your parents can't get along, and you can&rsquo;t ignore it, no matter how deep you immerse yourself in your game. If only you could get away from it all and escape to somewhere better. And seemingly, the voice in your game says you can.</p>",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "The Deadseat",
                            NumberOfDownloads = 100.0,
                            Price = 100000.0,
                            RequireActivationKey = true,
                            ShortDescription = "A short horror game where you play a hand-held game in the backseat during a long drive home.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=Q4A2c8-BN78&t=2s",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 0.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftCoverImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3211),
                            Description = "<p><strong>Announcement</strong>: Midnight Shift 1.2 has been released.</p><ul><li>Enhanced 4:3 VHS / found footage appearance.</li><li>The animation for the ending has been updated.</li><li>Increased field-of-view.</li><li>Updated main menu.</li></ul><p><strong>Synopsis</strong></p><p><em>Midnight Shift</em>&nbsp;puts players in the role as an ordinary security guard for a mannequin storage facility. At the end of a seemingly ordinary shift, strange things begin to happen in the facility. Leaving won't be easy as the keys required for the exit doors have been misplaced.</p><p><strong>Development</strong></p><p>This was my first Unity project I created during my time at Edmonton Digital Arts College. The project has eight weeks of development time with seldom game engine and coding experience.</p><p><strong>Developer's Note</strong></p><p>Thanks for 25,000+ Midnight Shift downloads! I appreciate all the support and your interest in my projects.</p>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "MidnightShift",
                            NumberOfDownloads = 150.0,
                            Price = 150000.0,
                            RequireActivationKey = true,
                            ShortDescription = "Escape a mannequin storage facility.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=v1oeNEKiwTg",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 3.0,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelicCoverImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<h2>THE STORY</h2><p>On your first day as an apprentice at the Nytheris Archive, you accidentally unleash an ancient force that was meant to stay sealed forever. Ooops!</p><p>Now, with the world teetering on the brink, it's up to you to piece together the remnants of a shattered relic and set things right.</p><p>Explore a world filled with strange characters, forgotten ruins, and puzzles. Follow the clues. Trust your instincts... and try not to make things worse.</p><p><em>Broken Relic</em>&nbsp;invites you to navigate a crumbling world, uncovering its secrets one strange step at a time. You may not be the hero it needs. But you're what it&rsquo;s got.</p><h2>What to expect:</h2><ul><li>Fully voiced dialogue with a world full of unusual people.</li><li>A handcrafted pixel art world filled with details and secrets.</li><li>Nonlinear exploration across connected regions.</li><li>No fail states, no pixel hunting, no filler.<br /><br /><br />If you enjoy the demo, please wishlist and follow the game on Steam, it really helps support the project!&nbsp;<br /><a href=\"https://store.steampowered.com/app/3384820/Broken_Relic/\" rel=\"nofollow noopener\">https://store.steampowered.com/app/3384820/Broken_Relic/<br /></a></li></ul><p>Also you can join the newsletter to hear about the big updates:&nbsp;<a href=\"https://broken-relic.kit.com/ea36291513\" rel=\"nofollow noopener\">https://www.brokenrelic.com/<br /></a>And dont forget to join our Discord!! <a href=\"https://discord.gg/zDBJUKwD\" rel=\"nofollow noopener\">https://discord.gg/zDBJUKwD</a></p>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Broken Relic",
                            NumberOfDownloads = 200.0,
                            Price = 200000.0,
                            RequireActivationKey = true,
                            ShortDescription = "First day on the job. You broke a seal, unleashed a dark power, and may have doomed everyone.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=ColSNi0XD6Q",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.0,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MoldwasherCoverImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3311),
                            Description = "",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Moldwasher",
                            NumberOfDownloads = 250.0,
                            Price = 120000.0,
                            RequireActivationKey = true,
                            ShortDescription = "",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=6KGgPoY7TbY",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.0,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MoldwasherCoverImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3319),
                            Description = "<h2>THE STORY</h2><p>On your first day as an apprentice at the Nytheris Archive, you accidentally unleash an ancient force that was meant to stay sealed forever. Ooops!</p><p>Now, with the world teetering on the brink, it's up to you to piece together the remnants of a shattered relic and set things right.</p><p>Explore a world filled with strange characters, forgotten ruins, and puzzles. Follow the clues. Trust your instincts... and try not to make things worse.</p><p><em>Broken Relic</em>&nbsp;invites you to navigate a crumbling world, uncovering its secrets one strange step at a time. You may not be the hero it needs. But you're what it&rsquo;s got.</p><h2>What to expect:</h2><ul><li>Fully voiced dialogue with a world full of unusual people.</li><li>A handcrafted pixel art world filled with details and secrets.</li><li>Nonlinear exploration across connected regions.</li><li>No fail states, no pixel hunting, no filler.<br /><br /><br />If you enjoy the demo, please wishlist and follow the game on Steam, it really helps support the project!&nbsp;<br /><a href=\"https://store.steampowered.com/app/3384820/Broken_Relic/\" rel=\"nofollow noopener\">https://store.steampowered.com/app/3384820/Broken_Relic/<br /></a></li></ul><p>Also you can join the newsletter to hear about the big updates:&nbsp;<a href=\"https://broken-relic.kit.com/ea36291513\" rel=\"nofollow noopener\">https://www.brokenrelic.com/<br /></a>And dont forget to join our Discord!!&nbsp;<a href=\"https://discord.gg/zDBJUKwD\" rel=\"nofollow noopener\">https://discord.gg/zDBJUKwD</a></p>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Latestop",
                            NumberOfDownloads = 300.0,
                            Price = 100000.0,
                            RequireActivationKey = true,
                            ShortDescription = "Chill mold-cleaning arcade",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=WJKp2xT4QTs",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 0.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<h3>ABOUT:</h3><p>A short,&nbsp;psychological horror experience where you, player, quickly age to see how's your family doing now.</p><h3>MORE INFO:</h3><p>~10 minutes</p><p>In game font: \"MouseMemoirs\"</p><h3>CONTROLS:</h3><table><tbody><tr><td>Movement</td><td>W, A,&nbsp;S, D</td></tr><tr><td>Sprint</td><td>Shift</td></tr><tr><td>Crouch</td><td>Ctrl</td></tr><tr><td>Interaction</td><td>E</td></tr></tbody></table><h3>NOTE:</h3><p>Game has a bit of experimentation going on in it and I tried some new stuff, like moving away from retro graphics, experimenting with movement and colors etc. and I sincerely hope that you will like what you see!</p><p>If you run into any bugs or issues, feel free to reach out in the comments, my&nbsp;<a href=\"https://www.youtube.com/@VukDobric\" target=\"_blank\" rel=\"nofollow noopener\">YouTube</a>&nbsp;channel or by e-mail at&nbsp;vukkdobric@gmail.com</p>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "QuietPlace",
                            NumberOfDownloads = 300.0,
                            Price = 50000.0,
                            RequireActivationKey = true,
                            ShortDescription = "Short and strange psychological horror",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=gjV5Vdf04UY&t=1s",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.5,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3336),
                            Description = "<h3>Welcome to PAC-SIDE</h3><p>PAC-SIDE is a fast-paced pacman-based horror game, where you can meet your old yellow friend! Wait.. It looks like something bad&nbsp;happened with him..</p><h3>Controls</h3><table><tbody><tr><td><strong>W, A,&nbsp;S, D</strong></td><td>Movement</td></tr><tr><td><strong>Mouse</strong></td><td>Look Around</td></tr><tr><td><strong>Left Shift</strong></td><td>Run</td></tr></tbody></table><h3>Epilepsy Warning!</h3><p>This game contains flashing lights and images, which is&nbsp;<strong>NOT RECOMMENDED</strong>&nbsp;for sensitive people.</p><h3>Developer</h3><p>Game by&nbsp;<strong>SeriousDaniel</strong></p><p>Made with Unreal Engine</p><p><strong>This game is a fan-game and does NOT related to the original Pac-Man or its developers. All rights to the original characters, sounds and graphics&nbsp;belong to Bandai Namco.</strong></p><p>Follow me on X&nbsp;<a href=\"https://x.com/serious_voice\" rel=\"nofollow noopener\">https://x.com/serious_voice</a></p>",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Pacside",
                            NumberOfDownloads = 400.0,
                            Price = 75000.0,
                            RequireActivationKey = true,
                            ShortDescription = "A pac-man horror game",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=yxt7w5VRQ_w",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage.jpg",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3343),
                            Description = "<h3>Help Sheepy, an abandoned plushy brought to life, as he explores a forgotten and broken world. Sheepy: A Short Adventure is the first short game from MrSuicideSheep.</h3><h2>Independently Handcrafted</h2><p>A short, handcrafted, fully independent pixel art platformer, spanning several zones with unique skills to unlock. Discover an abandoned world full of secrets and lore influenced by themes driven by the music and community of MrSuicideSheep for more than 10 years.&nbsp;</p><h2>An Original Soundtrack</h2><p>Weaved into the world is an incredible original soundtrack created by Seeking Blue artists Tal Richards, Hahlweg and Yoe Mase availble to stream and purchase here.</p><h2>Mailing List</h2><p>Join the Mailing List and be the first to learn about future happenings with Sheepy!</p>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Sheepy",
                            NumberOfDownloads = 500.0,
                            Price = 75000.0,
                            RequireActivationKey = true,
                            ShortDescription = "Help Sheepy, as he explores a forgotten an broken world.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=RRs_AI96h-w",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.0,
                            CategoryId = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p><em>Donation is not necessary to play the game, but definitely much appreciated for me to keep making games.</em></p><p>---</p><h2><strong>DAUGHTER</strong></h2><p>Your daughter went to a sleepover birthday party at her friend's house, what could go wrong?</p><p>This is a short horror game about you trying to rescuing your daughter from a creepy house.</p><p>The story might feel incomplete as&nbsp;Daughter is a submission to the Lost Relic Games Game Jam 2022 and was made in a week. The theme is \"connection\" and I'm going for a more abstract route about the connection between the father and the daughter.</p><p>Your comments and feedbacks are very much appreciated as I might be updating this game after the Jam.</p><p>---</p><p><strong>BUGS</strong></p><ul><li>If you have a hard time reading the notes, close the flashlight before you interact with it.</li></ul><p>---</p><h2>BASIC CONTROLS</h2><p>Only support keyboard and mouse.</p><p>W,A,S,D - Walk</p><p>LEFT SHIFT - Sprint</p><p>F / E / LMB&nbsp;- Interact</p><p>G - Flashlight</p><p>Left CTRL - Crouch</p><p>---</p><p><strong>If you enjoy my game,&nbsp;you can follow my development on X:&nbsp;<a href=\"https://x.com/MikeTenDev\" rel=\"nofollow noopener\">https://x.com/MikeTenDev</a></strong></p><p>---</p><h2>CREDITS</h2><p><strong>TOOLS USED:&nbsp;</strong>Unreal Engine, Blender and Audacity</p><p><strong>ASSETS USED:</strong></p><p>Modular PSX Architecture Pack:&nbsp;<a href=\"https://comp3interactive.itch.io/modular-psx-architecture-kit\">https://comp3interactive.itch.io/modular-psx-architecture-kit</a></p><p>Retro PSX Style Tree Pack:&nbsp;<a href=\"https://elegantcrow.itch.io/psx-retro-style-tree-pack\">https://elegantcrow.itch.io/psx-retro-style-tree-pack</a></p><p>Retro House Pack: <a href=\"https://elegantcrow.itch.io/retro-house-pack\">https://elegantcrow.itch.io/retro-house-pack</a></p><p>Tiny Texture Pack 1:&nbsp;<a href=\"https://screamingbrainstudios.itch.io/tiny-texture-pack\">https://screamingbrainstudios.itch.io/tiny-texture-pack</a></p><p>Deceitful Castle in Dungeon Music Pack:&nbsp;<a href=\"https://assetstore.unity.com/packages/audio/music/dungeon-music-pack-20599\" rel=\"nofollow noopener\">https://assetstore.unity.com/packages/audio/music/dungeon-music-pack-20599</a></p><p>Fantasy Sound Bundle:&nbsp;<a href=\"https://assetstore.unity.com/packages/audio/sound-fx/fantasy-sounds-bundle-193760\" rel=\"nofollow noopener\">https://assetstore.unity.com/packages/audio/sound-fx/fantasy-sounds-bundle-19376</a></p><p>Happy Birthday Whistle:&nbsp;<a href=\"https://freesound.org/people/gaiterjay/sounds/617576/\" rel=\"nofollow noopener\">https://freesound.org/people/gaiterjay/sounds/617576/</a></p><p>Requiem in d minor:&nbsp;<a href=\"https://musopen.org/music/43683-requiem-in-d-minor-k-626/\" rel=\"nofollow noopener\">https://musopen.org/music/43683-requiem-in-d-minor-k-626/</a></p><p>Biblical Goth Girl:&nbsp;<a href=\"https://crimsongcat.itch.io/biblical-goth-angel-girl\">https://crimsongcat.itch.io/biblical-goth-angel-girl</a></p><p>Brush Strokes:&nbsp;<a href=\"https://www.freepik.com/vectors/japanese-brush\" rel=\"nofollow noopener\">https://www.freepik.com/vectors/japanese-brush</a></p>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Daughter",
                            NumberOfDownloads = 200.0,
                            Price = 75000.0,
                            RequireActivationKey = true,
                            ShortDescription = "A short horror game",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 0.5,
                            CategoryId = new Guid("77c89b32-78e3-4fea-915f-4b8df819ffa2"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3391),
                            Description = "<p>a short&nbsp;<strong>vn style game</strong>&nbsp;made in rpgmaker in which you try to find out what happened to your missing friend.</p><p><strong>contains: mild blood, needles, a yandere, and a little bit of comedy</strong></p><p>this game's super short,&nbsp;<strong>5 endings</strong>, maybe around 10 to 15 minutes to complete?</p><p>sorry if there's errors and stuff, i made the entire thing in one night and im very sleep deprived&nbsp;</p><p>if there's any major errors or bugs lmk i'll try to get to fixing that asap okay dokay</p><p><strong>credits</strong></p><p>art and music: me</p><p>plugins: galv and that YEP message core thingy</p><p><strong>and btw.....!</strong></p><p>if you wanna follow along the development of the main game that this one is based off of, come&nbsp;<a href=\"https://discord.gg/MGzVp9JSsK\" target=\"_blank\" rel=\"nofollow noopener\">join my discord server!!</a></p>",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Missing",
                            NumberOfDownloads = 150.0,
                            Price = 60000.0,
                            RequireActivationKey = true,
                            ShortDescription = "Your friend's gone missing. You're out to find out what happened to them.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("78b9e146-d318-4fc5-aa13-1ba2e7c304c9"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 2.0,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/BloodmallImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3397),
                            Description = "<p><em>Warning: Contains blood, violence, strong language and disturbing imagery.</em></p><h1><em>Dated November 4th, 1988.</em></h1><h2>MASSACRE AT DAYTON COUNTY MALL! HUNDREDS DEAD, OVER 350 INJURED.</h2><h2>EXPERTS ARE STILL INVESTIGATING WHAT EXACTLY HAPPENED, BUT IT APPEARS A... DINOSAUR?... MATERIALISED IN THE MALL AND WENT FERAL...</h2><p><em>This is a breaking story - more information soon.</em></p><p><strong>Special thanks:</strong></p><ul><li>3D Art assistance - Anders Brynildsen</li></ul><p><strong>Voicing:</strong></p><ul><li>Han Davies</li><li>Ned Sanders</li><li>Will Aryitey</li><li>Figerox Studios</li></ul><p>This game was heavily inspired by the legend,&nbsp;Puppet Combo.</p>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Bloodmall",
                            NumberOfDownloads = 350.0,
                            Price = 80000.0,
                            RequireActivationKey = true,
                            ShortDescription = "It came without warning. Put an end to the massacre, and hunt down the dinosaur.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=1fYf3Rt7guw",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("34209460-1478-4545-9f15-723eeefc5697"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/ThunderheadImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p><strong><em>On Friday night, just past midnight, the people of Thunderhead screamed in terror.</em></strong></p><p><strong><em>Their end began four days earlier, when a strange hill appeared at the edge of the cemetery.</em></strong></p><p><strong><em>Maybe it began even further back - but our story begins the next morning, when the first light touched a town stained by horror.</em></strong></p><p><strong><em>What happened in Thunderhead was first told by the man who delivers milk every Friday to towns too quiet to matter.</em></strong></p><h2>FEATURES</h2><ul><li><strong><em>A&nbsp;Milk-Delivery Western Horror!</em></strong></li><li><em><strong>Driving!&nbsp;</strong></em>Take the wheel of your rusty old van.</li><li><strong><em>Delivering!</em></strong>&nbsp;Bring milk and orange juice to a tiny, forgotten Western town.<em><br /></em></li><li><strong><em>Fixing!</em></strong>&nbsp;The van's temperamental&mdash;sometimes it needs a whack with a wrench.</li><li><strong><em>Mystery!&nbsp;</em></strong>The town is empty. Where did everyone go? Why are there crosses everywhere? Who left behind those torn clothes? What happened here?</li><li><strong><em>Spectacle!</em></strong>&nbsp;Phenomenal music by&nbsp;<a href=\"https://voltzsupreme.itch.io/\">Voltz Supreme</a>, immersive sound design and an epic, cinematic finale.</li><li><strong><em>Retro graphics!</em></strong>&nbsp;Soak in the PSX-style aesthetic - on the prairie!</li></ul><h2>SOUNDTRACK</h2><p><a href=\"https://open.spotify.com/playlist/4ZiuqrgseeMUVCzz7oZI1D?si=42f92c241bdb4c7f&amp;nd=1&amp;dlsi=acab8f98a54b45e5\" rel=\"nofollow noopener\">You can listen to the soundtrack here.</a></p><h2>FOUND A BUG?&nbsp;</h2><p>Please let me know in the comments.&nbsp;</p><h2>FOLLOW ME</h2><table><tbody><tr><td><a href=\"https://bsky.app/profile/roawrvideostore.bsky.social\" rel=\"nofollow noopener\">Bluesky</a></td><td><a href=\"https://www.instagram.com/roawrvideostore/\" rel=\"nofollow noopener\">Instagram</a></td><td><a href=\"https://www.threads.net/@roawrvideostore\" rel=\"nofollow noopener\">Threads</a></td></tr></tbody></table>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Thunderhead",
                            NumberOfDownloads = 400.0,
                            Price = 90000.0,
                            RequireActivationKey = false,
                            ShortDescription = "A Milk-Delivery Western Horror.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=c8JdCXw4l3k",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("ae4dbda4-695a-44b8-9c93-7785cf1d717e"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.5,
                            CategoryId = new Guid("77c89b32-78e3-4fea-915f-4b8df819ffa2"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/EvaluationImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3411),
                            Description = "<h1>Evaluation</h1><p>A short PS1-inspired third person adventure game about growing up&nbsp;and finding your place in reality.<br />The game focuses on rewarding exploration, features NPCs and platforming elements, all supported by the narrative and a strong eerie atmosphere.</p><p>Evaluation is my first game&nbsp;project. It was a wild ride, way longer to finalize than I expected, but I learnt so much along the way, and hope to do more in the future!</p><h1>Controls</h1><p>WASD/Arrow keys - Move<br />MOUSE - Look around /&nbsp;click advances dialogue<br />SPACE - Jump<br />E - Talk/Interact<br />ESCAPE - Skip Cutscene<br />R - Respawn (if you get stuck)</p><h1>Credits</h1><p>I crafted as much as I could do from scratch, however the following external assets were of invaluable help on pulling off the game as I imagined it:<br /><a href=\"https://hutonggames.com/\" rel=\"nofollow noopener\">Playmaker - Huton Games</a><br /><a href=\"https://www.w3schools.com/\" rel=\"nofollow noopener\">PSX Effects - Triple Axis</a><br /><a href=\"https://assetstore.unity.com/packages/tools/physics/character-movement-fundamentals-144966\" rel=\"nofollow noopener\">Character Movement Fundamentals - Jan OTT</a><br /><a href=\"https://assetstore.unity.com/packages/3d/animations/basic-motions-free-154271\" rel=\"nofollow noopener\">Basic Motions - Kevin Iglesias</a></p><h1>More</h1><p>Find me on&nbsp;<a href=\"https://www.instagram.com/vivivivitotototo/\" rel=\"nofollow noopener\">Instagram</a>,&nbsp;<a href=\"https://twitter.com/vtrmrl\" rel=\"nofollow noopener\">Twitter</a>,&nbsp;<a href=\"https://soundcloud.com/zerocrossingpoint\" rel=\"nofollow noopener\">Soundcloud</a></p><p>Let me know if you find any bugs!</p><p><br /><br /></p>",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Evaluation",
                            NumberOfDownloads = 500.0,
                            Price = 90000.0,
                            RequireActivationKey = false,
                            ShortDescription = "A short PS1-inspired third person adventure & exploration game about growth",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("ebe90f4b-241a-44d6-8645-4c1f28376f3e"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.0,
                            CategoryId = new Guid("bca8721b-c323-44a1-afcf-876e206ab035"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/DominoidImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3418),
                            Description = "<p><strong>DOMINOID&nbsp;</strong>is an arcade-styled&nbsp;puzzle game about stacking dominids!&nbsp;<strong>CLEAR&nbsp;</strong>pieces by forming&nbsp;<strong>RINGS&nbsp;</strong>with matching tiles. Create huge&nbsp;<strong>COMBOS&nbsp;</strong>by stacking dominids effectively. Collect&nbsp;<strong>BADGES&nbsp;</strong>for major accomplishments.&nbsp;Earn&nbsp;<strong>EXP&nbsp;</strong>by clearing dominids to go towards a&nbsp;<strong>LEVEL UP</strong>. Can you get all the way to&nbsp;<strong>LEVEL 10</strong>?</p><p>The game features gamepad support as well as remappable controls for both keyboard and gamepad. There's support for custom music packs, sound effect packs, background sets, and pieces. Multiple sets of backgrounds and pieces come included with the game. The game also comes with an&nbsp;instruction book and wallpaper bundle.</p><p><img src=\"https://img.itch.zone/aW1nLzIxNDg1MzM4LnBuZw==/original/TVLouX.png\" alt=\"\" /></p><p>Additional art by : Julian</p><p>Audio by : Dim&nbsp;Widdy</p>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Dominoid",
                            NumberOfDownloads = 600.0,
                            Price = 95000.0,
                            RequireActivationKey = false,
                            ShortDescription = "An arcade-styled falling block puzzle game. Stack DOMINIDS, form RINGS, build COMBOS, & earn EXP to LEVEL UP!",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("85ce733a-7a1a-4e52-8513-2638b9c44e55"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/DiggingHourImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<h3>ABOUT:</h3><p>A short, atmospheric horror experience where you and a friend are tasked with digging up two bodies,&nbsp;<strong>but something isn&rsquo;t right.</strong></p><h3>MORE INFO:</h3><p>~10 minutes</p><p>In game font: \"November\"</p><h3>CONTROLS:</h3><table><tbody><tr><td>Movement</td><td>W, A,&nbsp;S, D</td></tr><tr><td>Sprint</td><td>Shift</td></tr><tr><td>Interaction</td><td>E</td></tr><tr><td>Attack</td><td>LMB</td></tr></tbody></table><h3>WARNING:</h3><p>The game features mild gore, loud sound effects and everything that comes with horror genre. Player discretion is advised.</p><h3>NOTE:</h3><p>Game has a bit of comedy in it and I hope that I did good job with implementing it!</p><p>Don't harass me over voice acting :D , Neither me, or my friend are native English speakers, but we gave it our best and had a lot of fun doing it!</p><p>Most of the&nbsp;<strong>models&nbsp;</strong>(4 that aren't are aptly credited),&nbsp;<strong>music&nbsp;</strong>and&nbsp;<strong>scripts</strong>&nbsp;in&nbsp;the game are made by me, textures are from&nbsp;<a href=\"https://ambientcg.com/\" target=\"_blank\" rel=\"nofollow noopener\">AmbeintCG</a>.</p><p>If you run into any bugs or issues, feel free to reach out in the comments, my&nbsp;<a href=\"https://www.youtube.com/@VukDobric\" target=\"_blank\" rel=\"nofollow noopener\">YouTube</a>&nbsp;channel or by e-mail at&nbsp;vukkdobric@gmail.com</p><h3>UPDATE:</h3><p>CaseOh, being an absolute legend that he is, played another one of my games on his stream, this is snippet of the live where he plays this game, thanks CaseOh!</p>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "DiggingHour",
                            NumberOfDownloads = 700.0,
                            Price = 85000.0,
                            RequireActivationKey = false,
                            ShortDescription = "Atmospheric horror experience where you and your friend have to dig some bodies, but something is wrong.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=tNoPejgMaB0",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/DispatchedImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3433),
                            Description = "<h1><em>Dispatched!&nbsp;</em></h1><h3>\"The Hungry Hungry Hippos of late-stage capitalism.\"</h3><p>From the same idiots who made 'Plane Food Simulator':&nbsp;<a href=\"https://sheepandram.itch.io/pfs2021\">https://sheepandram.itch.io/pfs2021</a></p><p><strong>Platform =</strong>&nbsp;PC and Android App&nbsp;Store<br /><strong><br /></strong><strong>Full Description:</strong></p><p>In&nbsp;<em>Dispatched!</em>&nbsp;the aim of the game is to mail as many parcels as you can within the allocated time! Be careful you don't confuse the priority boxes, and make sure you bring an empty bottle.</p><p><strong>PC Controls:<br /></strong>Begin Game: Enter<br />Dispatch Parcel (Employee Left): Q<br />Dispatch Parcel (Employee Right): P<br /><strong><br /></strong><strong>Android/Phone Controls:</strong><br />Start Game = Tap Screen<br />Dispatch Parcel&nbsp;(Employee Left) = Tap Screen (Left hand side)<br />Dispatch Parcel (Employee Right) = Tap Screen (Right hand side)<br /><strong><br /></strong></p><p><strong>Executive Imagineer Enhancement Architect</strong><br />Chris Ramsden&nbsp;<a href=\"https://chris-ramsden.neocities.org/\" rel=\"nofollow noopener\">Neocities</a><br /><strong><br /></strong><strong>Executive Code Architect and Fulfilment Developer&nbsp;</strong><br />Sheps&nbsp;<a href=\"https://linktr.ee/thesheps\" rel=\"nofollow noopener\">https://linktr.ee/thesheps</a></p><p><strong>Executive Experience Enhancement Officer&nbsp;</strong><br />Max Blake</p><p><strong>Soundtrack Specialist</strong><br />The Gasman <a href=\"https://thegasman.bandcamp.com/music\" rel=\"nofollow noopener\">https://thegasman.bandcamp.com/music</a></p><p><strong>Special Thanks&nbsp;</strong>:&nbsp;<a href=\"https://freetousesounds.bandcamp.com/\" rel=\"nofollow noopener\">https://freetousesounds.bandcamp.com/</a></p><p><strong>All essential workers and distribution staff. Thanks for halting the societal collapse of 2020/21!</strong></p>",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Dispatched",
                            NumberOfDownloads = 100.0,
                            Price = 85000.0,
                            RequireActivationKey = false,
                            ShortDescription = "The Hungry Hungry Hippos of late-stage capitalism.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("a60c6a31-3d0c-4bb4-9f2a-99020ea026fc"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.0,
                            CategoryId = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/SecurityBoothImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3439),
                            Description = "<p><strong>Security Booth is a VHS PSX Horror Game.&nbsp;</strong></p><p>Based in 1996, you are working for a company known as Nova Nexus, you play as a security guard.<br />Your job role is to make sure that only the right authorized personnel are getting into the facility.&nbsp;</p><p>The game has a total of&nbsp;<strong>2 endings.<br /></strong></p><p><strong>Average Game Time - 10 Minutes&nbsp;</strong></p><p><strong>Game Controls&nbsp;</strong></p><table><tbody><tr><td>Walk</td><td>Look Around</td><td>Interact</td><td>FlashLight</td></tr><tr><td>W,A,S,D</td><td>Mouse</td><td>E</td><td>F</td></tr></tbody></table><p><strong>Menu/UI Controls</strong></p><table><tbody><tr><td>Select Option</td><td>Go To Option Right/Next Page</td><td>Go To Option Left/Previous Page</td><td>Go To Option Up Or Down</td></tr><tr><td>E</td><td>D</td><td>A</td><td>W - UP<br />S - Down</td></tr></tbody></table><p>*The Mouse will never show up in game*</p><p>--------------------------------------------------------------------</p><p>Want more?<br />Security Booth:&nbsp;Director's Cut is OUT NOW!<br />Check out the Steam store or grab it here on Itch.io.</p><p>Follow my twitter for future games that I am making.<br /><a href=\"https://twitter.com/KyleHorwood\" rel=\"nofollow noopener\">https://twitter.com/KyleHorwood</a></p>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "SecurityBooth",
                            NumberOfDownloads = 200.0,
                            Price = 70000.0,
                            RequireActivationKey = false,
                            ShortDescription = "A Short VHS PSX Horror Game.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=wYnJD9Pteis",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("152e3482-be53-44db-93e6-785823f6224e"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.0,
                            CategoryId = new Guid("89a4e6d2-2cfe-4474-9b96-6d3595ad4705"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/AtlyssImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<h2>``ATLYSS``</h2><h4>SOLO DEVELOPMENT ACTION ORPG PROJECT</h4><p><em><strong>A work in progress / under development game made by Kiseff</strong></em><em><br /></em></p><h4>Core Game Info</h4><ul><li>\"ATLYSS\" is a (Single-player + Multi-player)&nbsp;<strong>A</strong>ction&nbsp;<strong>O</strong>nline&nbsp;<strong>R</strong>ole&nbsp;<strong>P</strong>laying&nbsp;<strong>G</strong>ame</li><li>Enriched, instanced maps to discover</li><li>Equipment, Trade Items and Consumables to collect</li><li>Many Character Customization options with&nbsp;<strong>5 races</strong>&nbsp;to choose from</li><li>3 Primary Classes to become at lv-10 (<strong>Fighter</strong>,&nbsp;<strong>Bandit</strong>,&nbsp;<strong>Mystic</strong>)</li><li>Skill load-out system for making builds to suit your game-play style</li><li>Character stat progression / leveling systems / attributes</li><li>7 Weapon types to use in combat (Katars, Heavy Melee, Scepters, and more)</li><li>Repeatable Questing / Single Quests to complete</li><li><strong>Aesthetics inspired by 6th Generation video games</strong></li></ul><h4>Media / Promotion</h4><p><a href=\"https://www.patreon.com/Kiseff?fan_landing=true\" target=\"_blank\" rel=\"nofollow noopener\"><strong>If you'd like to support my game-dev work and other assorted projects, you can do so via my Patreon!</strong></a></p><p>For more instant information / updates / development progress, you can:</p><p><a href=\"https://twitter.com/kis_soft\" target=\"_blank\" rel=\"nofollow noopener\"><strong>Follow @kis_soft on Twitter</strong></a><strong><br /></strong></p><p><strong><a href=\"https://discord.gg/vScP5yUbtk\" target=\"_blank\" rel=\"nofollow noopener\">Join the KisSoft Underground Server to receive progression updates and notes, including announcements first hand! Community links are provided in the Discord's promotional links channel.</a></strong></p>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Atlyss",
                            NumberOfDownloads = 150.0,
                            Price = 60000.0,
                            RequireActivationKey = false,
                            ShortDescription = "",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "https://www.youtube.com/watch?v=example",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("d11cf96a-0d4f-4834-868c-59b32f047d2a"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.5,
                            CategoryId = new Guid("5e1afbc9-31dd-417d-ae49-baa45d6d5797"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/TomatoImage.jpg",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3475),
                            Description = "<h4>\"Welcome to my game, buddy!\"</h4><p>Mr. TomatoS is glad to see you! He waited a long time for someone to visit him! Feel like at home and get ready for endless f̶u̶n̶ !</p><p>Mr. TomatoS needs YOUR help! looks like he had not eaten for ages! Of course not, he has no hands!</p><p>Feed Mr. Tomatos with big variety of food, combine it with blender, and use different items to help you with this task!</p><h4>\"But why should I do this?\"</h4><p>Glad you asked! By helping him you can earn a lot of points to spend them in the shop later! Everyone loves to earn points, right?</p><h4>\"Why am i always d̶y̶i̶n̶g̶ losing?\"</h4><p>Glad you asked, my dear friend! j̶u̶s̶t̶ d̶o̶n̶t̶ d̶o̶w̶n̶l̶o̶a̶d̶ i̶t̶ you need a strategy to finish the game! without a strategy, everything can go wrong.</p><p>Manage your resources correctly to s̶t̶a̶y̶ a̶l̶i̶v̶e̶ win!)</p><p>unless you want to make Mr. TomatoS angry.</p><p>This game is made in the style of old web flash games, what sets it apart from other new games!</p><p>Feel the atmosphere of old flash games!</p><p>You can complete the game only ONCE, that means that you won't have a second chance. And how you will complete YOUR game - depends only on YOU. Try your best. Good luck.</p><p>Main theme by:&nbsp;<strong>Cnupoc (</strong><span title=\"https://freesound.org/people/Cnupoc/\"><a href=\"https://freesound.org/people/Cnupoc/\" rel=\"nofollow noopener\">https://freesound.org/people/Cnupoc/</a></span><strong>)</strong></p><p>Game theme by:&nbsp;<strong>Sirkoto51 (</strong><span title=\"https://freesound.org/people/Sirkoto51/\"><a href=\"https://freesound.org/people/Sirkoto51/\" rel=\"nofollow noopener\">https://freesound.org/people/Sirkoto51/</a></span><strong>)</strong></p><p><strong>Sirkoto51 soundcloud :&nbsp;</strong>&nbsp;<span title=\"https://soundcloud.com/sirkoto51\"><a href=\"https://soundcloud.com/sirkoto51\" rel=\"nofollow noopener\">https://soundcloud.com/sirkoto51</a></span></p><p>Some sounds by:&nbsp;<strong>InspectorJ(</strong>Jonathan Shaw<strong>) (</strong><span title=\"https://freesound.org/people/InspectorJ/\"><a href=\"https://freesound.org/people/InspectorJ/\" rel=\"nofollow noopener\">https://freesound.org/people/InspectorJ/</a></span><strong>)</strong></p><p><strong>InspectorJ patreon:&nbsp;</strong><span title=\"https://www.patreon.com/JonathanShaw\"><a href=\"https://www.patreon.com/JonathanShaw\" rel=\"nofollow noopener\">https://www.patreon.com/JonathanShaw</a></span></p><h3>MrTomatoS</h3><p>- standard version of the game.</p><h3>MrTomatoS++</h3><h4>\" Oh oh, it looks like someone messed up the game code!&nbsp;\"</h4><p>- Now you can reset your game progress after completion to get more endings</p><p>- You can download this version even if you already played in standart version, and completed it</p>",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Tomato",
                            NumberOfDownloads = 300.0,
                            Price = 75000.0,
                            RequireActivationKey = false,
                            ShortDescription = "Welcome to my game, buddy!",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("ca5adbdb-160c-4a60-98b3-e4f464fbf904"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/LeftoversImage.png",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 629, DateTimeKind.Local).AddTicks(3481),
                            Description = "<p>Your mum is cooking dinner. Saddened by the amount of leftover and not wanting it to go to waste, she tasked you the job to give it all away to your neighbours.</p><p>You, who was just minding your own business watching cartoons. You who your mum have told many times to not talk to strangers. But yet, you have no right to deny the request.&nbsp;</p><p>Armed with limited skills of communication, meet all the quirky and creepy neighbours to finish the task before your mum finish you first...literally.</p><p>Created for SCREAM JAM 2021&nbsp;by:</p><ul><li>Realmpact - Programmer</li><li>Skekarin - Artist, Writer and Games Designer</li></ul><p><strong>Disclaimer</strong></p><p>The WebGL version of the game is meant for users who are not using a Windows machine. For the best experience, we would recommend downloading the Windows version instead.</p><p>FAQ</p><ul><li>Help! I cannot show the leftovers!<ul><li>Press Q during the prompt to show leftovers&nbsp;to continue the conversation as if you showed it.</li></ul></li></ul>",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "Leftovers",
                            NumberOfDownloads = 100.0,
                            Price = 50000.0,
                            RequireActivationKey = false,
                            ShortDescription = "Don't talk to strangers, unless your mother needs you to.",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        },
                        new
                        {
                            Id = new Guid("791a4c74-d469-4432-bd76-c5ace021ce8e"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = true,
                            AverageSession = 1.0,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CensorStatus = "Approved",
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheStationImage.png",
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "<p>After a long day, you take the subway home. The train is late, but everything seems normal&mdash;until the doors close. Among the passengers, one man starts acting strange... There's nowhere to run.</p><h3>Features:</h3><p>Average playtime: 5&ndash;10 minutes</p><p>Four original endings + secret ending</p><p>PSX retro style</p><p>Original story</p><p><strong>Streamer-YouTuber friendly: non-copyright music</strong></p><p>Completely translated to Portuguese, Spanish, Turkish, Polish, Russian, German, Korean, Italian and French!</p><h3>Controls:</h3><p>Movement: WASD</p><p>Run: Shift</p><p>Interact: E</p><p>Next dialogue/Move objects: Left mouse button</p><p>Stand up: Space</p><h3>About:</h3><p>DISCLAIMER: This game displays your pc's name so if you don't want your real name to be displayed you should change your pc's name or just don't play the game on stream.</p><p>If you liked this game, you should check out:</p><p><a href=\"https://riversoftware.itch.io/on-my-way-home\">On My Way Home by RiverSoftware</a></p><p><a href=\"https://riversoftware.itch.io/neighbournextdoor\">Neighbour Next Door by RiverSoftware</a></p><p><a href=\"https://riversoftware.itch.io/tv-night\">TV Night by RiverSoftware</a></p><h3>Known Issues:</h3><p>Gameplay limited to 100fps due to a bug with player controller</p><p>Some lights may not work if you select the low graphics option</p>",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            InstallInstruction = "",
                            IsDeleted = false,
                            Name = "TheStation",
                            NumberOfDownloads = 200.0,
                            Price = 65000.0,
                            RequireActivationKey = false,
                            ShortDescription = "Just a typical subway ride...",
                            Status = "Released",
                            VersionDescription = "",
                            VideoLink = "",
                            Visibility = "Public"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Languages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80e3581d-3836-4921-a838-b7d917b5e11f"),
                            IsDeleted = false,
                            Name = "Vietnamese"
                        },
                        new
                        {
                            Id = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527"),
                            IsDeleted = false,
                            Name = "English"
                        },
                        new
                        {
                            Id = new Guid("2f98f2c8-2640-4cff-a8eb-ed61d9179dcb"),
                            IsDeleted = false,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = new Guid("ae4f3cfb-6dd6-473b-a1c6-695f9edce11e"),
                            IsDeleted = false,
                            Name = "French"
                        },
                        new
                        {
                            Id = new Guid("73b3d9d2-ecbf-4d91-95ad-e9a48b7e54cd"),
                            IsDeleted = false,
                            Name = "German"
                        },
                        new
                        {
                            Id = new Guid("11a64feb-23f6-41ad-a55f-a9f487d04a85"),
                            IsDeleted = false,
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = new Guid("04adfb56-cb77-4209-8fc3-a7b96b768784"),
                            IsDeleted = false,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = new Guid("3ec80948-8c1a-46aa-9fd6-01feeb273c22"),
                            IsDeleted = false,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = new Guid("149615f6-6214-4e42-a016-1dba7d248c0f"),
                            IsDeleted = false,
                            Name = "Korean"
                        },
                        new
                        {
                            Id = new Guid("ca29265a-4bab-4aa1-a819-9636878b50da"),
                            IsDeleted = false,
                            Name = "Portuguese"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Libraries", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Orders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivationKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid?>("CommercialPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("CommercialRegistrationEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("CommercialRegistrationStartDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivationKeyId")
                        .IsUnique()
                        .HasFilter("[ActivationKeyId] IS NOT NULL");

                    b.HasIndex("CommercialPackageId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Platforms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            IsDeleted = false,
                            Name = "Windows"
                        },
                        new
                        {
                            Id = new Guid("db498cbb-c76f-4166-9836-8ecb462419e6"),
                            IsDeleted = false,
                            Name = "Linux"
                        },
                        new
                        {
                            Id = new Guid("574cb883-e637-4f18-9518-269e4d22312c"),
                            IsDeleted = false,
                            Name = "MacOS"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostComments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostImages");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostReactions", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PostReactions");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Posts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CensoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ReportReasons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("ReportTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b92d32e-0aa0-4f88-bc43-0e04c4121e0e"),
                            IsDeleted = false,
                            Name = "Copyright Infringement",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("1c0d2f16-1f4a-4c5e-9c26-2e86e0cfa28f"),
                            IsDeleted = false,
                            Name = "Malicious Behavior",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("59eff953-9268-4488-9f2a-0ce3a5b80ac3"),
                            IsDeleted = false,
                            Name = "Scam or Fraud",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("78e8165a-c263-4790-b0f4-21d2398c3d82"),
                            IsDeleted = false,
                            Name = "Performance Issues",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("77cf1c6b-bc98-4c98-8a7e-27f2c4b45377"),
                            IsDeleted = false,
                            Name = "Inappropriate Content",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("32992805-dcef-427a-afb8-239c79cb4de9"),
                            IsDeleted = false,
                            Name = "Offensive Language",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("7fb483f2-3499-4f56-a22f-af191fac0411"),
                            IsDeleted = false,
                            Name = "False Information",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("b348e5d5-55ea-48ed-a5fe-b3cc56c8a7b1"),
                            IsDeleted = false,
                            Name = "Harassment",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("3f36c22a-5f0d-4f02-ab65-b47a22ae81a7"),
                            IsDeleted = false,
                            Name = "Political or Religious Extremism",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("a8eae5df-0705-4021-835c-75c12df9b2f2"),
                            IsDeleted = false,
                            Name = "Off-topic",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("cf9fce91-e2d6-46b1-baa3-c0a11eb96c30"),
                            IsDeleted = false,
                            Name = "Inappropriate Content",
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("4f1491bf-15be-4e7a-83b4-c20a8017bf59"),
                            IsDeleted = false,
                            Name = "Offensive Language",
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("b7ae8b62-4cc1-4e45-9515-2c9a1a6e71b1"),
                            IsDeleted = false,
                            Name = "False Information",
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("d2ebbb20-5e8c-4d8e-aace-d499e04862a2"),
                            IsDeleted = false,
                            Name = "Harassment",
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("93d1432e-880f-4b87-b2fc-20e7d01b17b7"),
                            IsDeleted = false,
                            Name = "Political or Religious Extremism",
                            Type = "Comment"
                        },
                        new
                        {
                            Id = new Guid("e85da0be-4fe1-42b1-8260-97a13e82ae5c"),
                            IsDeleted = false,
                            Name = "Off-topic",
                            Type = "Comment"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReportReasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReportingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReviewMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("GameId");

                    b.HasIndex("PostId");

                    b.HasIndex("ReportReasonId");

                    b.HasIndex("ReportingUserId");

                    b.HasIndex("UsersId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reviews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5500fbd5-de10-4ad0-b8ce-cc79ebeb0407"),
                            Comment = "This is the best game I have ever seen",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 636, DateTimeKind.Local).AddTicks(551),
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            Rating = 5.0,
                            UserId = new Guid("23879117-e09e-40f1-b78f-1493d81baf49")
                        },
                        new
                        {
                            Id = new Guid("cd5848a1-4f57-4108-bfd4-17489a07fdd5"),
                            Comment = "This game gives me a cozy vibe",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 636, DateTimeKind.Local).AddTicks(559),
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            Rating = 4.0,
                            UserId = new Guid("91b106fa-7b95-480f-a12a-0e0303454332")
                        },
                        new
                        {
                            Id = new Guid("2fbcc560-ab16-4b35-a6f6-b4bdbab9fe8a"),
                            Comment = "This game is good, but it has some bugs",
                            CreatedAt = new DateTime(2025, 8, 21, 23, 43, 38, 636, DateTimeKind.Local).AddTicks(563),
                            GameId = new Guid("16565861-4a29-40e7-8efa-1594a82e67e8"),
                            Rating = 3.0,
                            UserId = new Guid("537f05fd-120c-40b0-b2ec-639756f866ab")
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f7b3f0c-3f54-4fb8-a215-33cd496c3be7"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("7211a346-6e23-431c-a6bd-2f02aa5de68a"),
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c"),
                            Name = "Developer",
                            NormalizedName = "DEVELOPER"
                        },
                        new
                        {
                            Id = new Guid("51999f00-0f63-4236-8c81-94c43fcf7586"),
                            Name = "Player",
                            NormalizedName = "PLAYER"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Tags", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd543d0f-1761-4874-945b-53863f00942b"),
                            IsDeleted = false,
                            Name = "Adventure",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("5452906a-03b1-45df-b4f0-a65398885171"),
                            IsDeleted = false,
                            Name = "Visual Novel",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("4d1a6086-ed27-4767-8fb6-4c4af12c384c"),
                            IsDeleted = false,
                            Name = "Role-Playing",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("1c175c84-379e-43dc-a95a-aafd910d6a00"),
                            IsDeleted = false,
                            Name = "Action",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("130d3ae5-7c92-4d37-9082-13226dd0d9af"),
                            IsDeleted = false,
                            Name = "Platformer",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("71918e61-bb0b-4ca1-975a-616d869769bf"),
                            IsDeleted = false,
                            Name = "Puzzle",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("b9e9a223-25b3-491b-ba92-e185a74d82ab"),
                            IsDeleted = false,
                            Name = "Simulation",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("f57af0bf-7612-4b08-84f3-be98a842f932"),
                            IsDeleted = false,
                            Name = "Interactive Fiction",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("46c0001e-beb3-4291-885a-f076e53f40fd"),
                            IsDeleted = false,
                            Name = "Survival",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("c04cba4a-a827-4a49-b61b-f02798ef17c9"),
                            IsDeleted = false,
                            Name = "Shooter",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("c7cee309-8f38-43fd-8512-e40e4d6f1ccd"),
                            IsDeleted = false,
                            Name = "Strategy",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("a137e663-30d5-4ed9-8aa3-b9b500f18de7"),
                            IsDeleted = false,
                            Name = "Card Game",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("41c1f4f5-4cf0-411b-bb15-e59f15b04762"),
                            IsDeleted = false,
                            Name = "Fighting",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("aa592c96-400a-4c67-bf18-3b82823e9ef9"),
                            IsDeleted = false,
                            Name = "Racing",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("8c202501-893d-427e-9faf-47e2f1d6ba2d"),
                            IsDeleted = false,
                            Name = "Education",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("a0f1e28b-a439-4e72-aed8-0baddbb515c2"),
                            IsDeleted = false,
                            Name = "Rhythm",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d"),
                            IsDeleted = false,
                            Name = "Horror",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b"),
                            IsDeleted = false,
                            Name = "2D",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708"),
                            IsDeleted = false,
                            Name = "Pixel Art",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f"),
                            IsDeleted = false,
                            Name = "3D",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3"),
                            IsDeleted = false,
                            Name = "First-Person",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("b6dd9e32-eaf5-4942-9c18-566421ca2e90"),
                            IsDeleted = false,
                            Name = "Top-Down",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("f503a37e-dff0-45a8-8ae8-58ccefa4c9d3"),
                            IsDeleted = false,
                            Name = "Low-Poly",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("9636813b-f393-4adb-b9a7-44f877f67ae5"),
                            IsDeleted = false,
                            Name = "8-Bit",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("3e7412cc-2817-4d03-9dcf-7c3c7e619186"),
                            IsDeleted = false,
                            Name = "16-Bit",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("f3527a12-03c3-417d-9dd1-6130e7fcfe3e"),
                            IsDeleted = false,
                            Name = "16x16",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("f8d13d4f-1a7b-406b-aa6e-4f37d8cebacf"),
                            IsDeleted = false,
                            Name = "Hand-Drawn",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac"),
                            IsDeleted = false,
                            Name = "Colorful",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("22ad33b0-8358-4054-aa6b-59a2b5296842"),
                            IsDeleted = false,
                            Name = "Isometric",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("aa580b0a-12c6-4d95-8d4f-c68fdd8cfbd9"),
                            IsDeleted = false,
                            Name = "32x32",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("569a2ff2-5259-4467-9824-a3f2c5a595f7"),
                            IsDeleted = false,
                            Name = "1-Bit",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("621f12a7-89cb-4b97-83c0-cd3e84774dd4"),
                            IsDeleted = false,
                            Name = "Third-Person",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("ab6e601e-52c3-45dc-97c3-1c6e84732769"),
                            IsDeleted = false,
                            Name = "Cartoon",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("bc50196f-6aa1-49c2-9347-33f4ef15b8d6"),
                            IsDeleted = false,
                            Name = "Black and White",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("8fdfc2fc-b9ae-49a4-9aa5-e986cdf9f65a"),
                            IsDeleted = false,
                            Name = "Neon",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("62c2fe13-f1d2-4905-b3e1-166598e091fb"),
                            IsDeleted = false,
                            Name = "8x8",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("8db1d14f-c82c-4a06-bd60-456350a62594"),
                            IsDeleted = false,
                            Name = "Non-Eucledian",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("e27b19a2-12d7-4a55-a8e4-7ff3487db712"),
                            IsDeleted = false,
                            Name = "Pastel",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("48239920-0a09-438e-8320-6b822e01f8bb"),
                            IsDeleted = false,
                            Name = "Two Colors",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("9c685bd3-c75f-48df-8043-20c2fe181e7f"),
                            IsDeleted = false,
                            Name = "Watercolor",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("048cbb0b-d39e-4f1d-b1d7-e28aeb6fc6e6"),
                            IsDeleted = false,
                            Name = "Grayscale",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("7e3be5eb-bf83-4450-9ecb-70535267d3ea"),
                            IsDeleted = false,
                            Name = "Flat-Shading",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("e4e35307-2071-4a75-88fc-579db0077703"),
                            IsDeleted = false,
                            Name = "Unity",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("611e1869-df31-4ec1-b063-7c9ae49bfb30"),
                            IsDeleted = false,
                            Name = "RPG Maker",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("6cc4c52b-3b0e-4641-9997-8a1e6c29753b"),
                            IsDeleted = false,
                            Name = "Godot",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("cd37e2fc-cb7e-45c3-90d6-87c690a2aaf3"),
                            IsDeleted = false,
                            Name = "Ren’Py",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("7d5d4e96-d0fa-440e-914f-1667b6ef54c1"),
                            IsDeleted = false,
                            Name = "Unreal Engine",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("7cc2168e-4ad6-409f-9868-bd59df589d8c"),
                            IsDeleted = false,
                            Name = "Guide 📖",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("e50d38ef-93f6-4f52-a55b-0dbf8188f91f"),
                            IsDeleted = false,
                            Name = "Discussion 💬",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("85a1abde-9980-4cc7-976e-1d4135ffddff"),
                            IsDeleted = false,
                            Name = "Review ★",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("229ef81c-f48f-49ae-a9a1-149f71d54d77"),
                            IsDeleted = false,
                            Name = "Showcase 🎨",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("da2b3f32-20fc-4a62-a16f-f87fbe4696fb"),
                            IsDeleted = false,
                            Name = "Question ❓",
                            Type = "Post"
                        },
                        new
                        {
                            Id = new Guid("510d85f4-c8dc-4228-93cb-311809751bed"),
                            IsDeleted = false,
                            Name = "Multiplayer",
                            Type = "Game"
                        },
                        new
                        {
                            Id = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301"),
                            IsDeleted = false,
                            Name = "Singleplayer",
                            Type = "Game"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("OrderCode")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PurchaseUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("OrderCode")
                        .IsUnique()
                        .HasFilter("[OrderCode] IS NOT NULL");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderId] IS NOT NULL");

                    b.HasIndex("PurchaseUserId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserAchievements", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserFollows", b =>
                {
                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FolloweeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FollowedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FollowerId", "FolloweeId");

                    b.HasIndex("FolloweeId");

                    b.ToTable("UserFollows");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserProfiles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankBin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("LastPingAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YoutubeChannelLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Admin",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Moderator",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("23879117-e09e-40f1-b78f-1493d81baf49"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Player1",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("91b106fa-7b95-480f-a12a-0e0303454332"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Player2",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("537f05fd-120c-40b0-b2ec-639756f866ab"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Player3",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Developer1",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Developer2",
                            YoutubeChannelLink = ""
                        },
                        new
                        {
                            UserId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccountName = "",
                            BankAccountNumber = "",
                            BankBin = "",
                            BankCode = "",
                            BankName = "",
                            BankShortName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Developer3",
                            YoutubeChannelLink = ""
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUsernameChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a34ece77-4650-4535-a488-b4666fbb83cd",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 645, DateTimeKind.Local).AddTicks(2589),
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEKFxTwEUC7KINhSZXMRGiMwhZfPEIXQ3NUqFbZP5cBiR3tRb5iOU26XaL0A8Ri7Zqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ce111f5d-2127-40d7-8e9c-af27ad49bde8",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b204b9df-538e-458b-be7e-13d52332a515",
                            Email = "moderator@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 702, DateTimeKind.Local).AddTicks(3223),
                            LockoutEnabled = true,
                            NormalizedEmail = "MODERATOR@GMAIL.COM",
                            NormalizedUserName = "MODERATOR",
                            PasswordHash = "AQAAAAIAAYagAAAAEDe/7XpG7lu7F2pFFaOhuGyKMtKI8dmrDn9Ilrbw06TN+Ly2CXPZbZKRGckWjJ+/lw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "db42aa60-11df-4fa7-b6c9-f08936b26229",
                            TwoFactorEnabled = false,
                            UserName = "moderator"
                        },
                        new
                        {
                            Id = new Guid("23879117-e09e-40f1-b78f-1493d81baf49"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "56613f56-c7cb-4473-9425-aa21c2740042",
                            Email = "player1@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 761, DateTimeKind.Local).AddTicks(1244),
                            LockoutEnabled = true,
                            NormalizedEmail = "PLAYER1@GMAIL.COM",
                            NormalizedUserName = "PLAYER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEO8QVKqAOLj50gxGqLonjir0Sqls9PiwUZvDJlFZdXrgH0qCFQAqnr5BXcZPecjSnw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c4cfbee9-23b2-416c-8654-7b05eef8cbf0",
                            TwoFactorEnabled = false,
                            UserName = "player1"
                        },
                        new
                        {
                            Id = new Guid("91b106fa-7b95-480f-a12a-0e0303454332"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d8ffc0e-cc1f-400d-97c3-371faa8531f5",
                            Email = "player2@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 817, DateTimeKind.Local).AddTicks(3297),
                            LockoutEnabled = true,
                            NormalizedEmail = "PLAYER2@GMAIL.COM",
                            NormalizedUserName = "PLAYER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEHKEng1g9hZr3KMnsErq72dn+33AMRqe21rhRmoaeTMSEw53Q8w+78b7Snl/wNtH5A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e198dece-1c4e-4c95-98e6-4b757b5531a6",
                            TwoFactorEnabled = false,
                            UserName = "player2"
                        },
                        new
                        {
                            Id = new Guid("537f05fd-120c-40b0-b2ec-639756f866ab"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e1975a5-e4f5-491b-b42c-af8baf1f98cb",
                            Email = "player3@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 875, DateTimeKind.Local).AddTicks(6868),
                            LockoutEnabled = true,
                            NormalizedEmail = "PLAYER3@GMAIL.COM",
                            NormalizedUserName = "PLAYER3",
                            PasswordHash = "AQAAAAIAAYagAAAAEFSqJWZrGGRBfjvJ4rBBaElHOe+zE7C/CNLvLWoVS0U/3xEPsxunaaJeWwrF97WbNw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7c078f60-daba-44b3-93d2-f4e704ecd58f",
                            TwoFactorEnabled = false,
                            UserName = "player3"
                        },
                        new
                        {
                            Id = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "23508b2f-9eec-4169-80e9-2f045f091b79",
                            Email = "developer1@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 936, DateTimeKind.Local).AddTicks(98),
                            LockoutEnabled = true,
                            NormalizedEmail = "DEVELOPER1@GMAIL.COM",
                            NormalizedUserName = "DEVELOPER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEFAStYe7yELa22JgeYVLOOwYo6cPQiS43txHk5FNoEOynfZ0553aUjvJZ733A5iskg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "304f9771-e3f2-4e81-a508-48401871f583",
                            TwoFactorEnabled = false,
                            UserName = "developer1"
                        },
                        new
                        {
                            Id = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f0a216a7-5006-4f1d-9ad4-0ed043759e73",
                            Email = "developer2@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 38, 990, DateTimeKind.Local).AddTicks(1591),
                            LockoutEnabled = true,
                            NormalizedEmail = "DEVELOPER2@GMAIL.COM",
                            NormalizedUserName = "DEVELOPER2",
                            PasswordHash = "AQAAAAIAAYagAAAAELHHiokUQ4fV4UufHbKFA4iCgSGd4lPsh9XT9QjarqBosLdfI2vo+3ih/0EftJ/nUA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "959a60d6-8da9-44e4-80fc-0c519e7923ab",
                            TwoFactorEnabled = false,
                            UserName = "developer2"
                        },
                        new
                        {
                            Id = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "419a21a0-c165-4d1c-8a1d-025fd57903c4",
                            Email = "developer3@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 8, 21, 23, 43, 39, 44, DateTimeKind.Local).AddTicks(6100),
                            LockoutEnabled = true,
                            NormalizedEmail = "DEVELOPER3@GMAIL.COM",
                            NormalizedUserName = "DEVELOPER3",
                            PasswordHash = "AQAAAAIAAYagAAAAEL5U20f/vAv9wQmyMAMJxVyseWpJ7ofCDuNeB5esXVtxxLHyLKkvlabq875Jzt6aqA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "658092e6-5120-446c-9f11-8d3c45d6f239",
                            TwoFactorEnabled = false,
                            UserName = "developer3"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wallets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            Balance = 0.0
                        },
                        new
                        {
                            UserId = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            Balance = 0.0
                        },
                        new
                        {
                            UserId = new Guid("23879117-e09e-40f1-b78f-1493d81baf49"),
                            Balance = 1000000.0
                        },
                        new
                        {
                            UserId = new Guid("91b106fa-7b95-480f-a12a-0e0303454332"),
                            Balance = 0.0
                        },
                        new
                        {
                            UserId = new Guid("537f05fd-120c-40b0-b2ec-639756f866ab"),
                            Balance = 0.0
                        },
                        new
                        {
                            UserId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            Balance = 1000000.0
                        },
                        new
                        {
                            UserId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            Balance = 0.0
                        },
                        new
                        {
                            UserId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            Balance = 0.0
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wishlists", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.WithdrawRequests", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HandledAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageProof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WithdrawRequests");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            RoleId = new Guid("6f7b3f0c-3f54-4fb8-a215-33cd496c3be7")
                        },
                        new
                        {
                            UserId = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            RoleId = new Guid("7211a346-6e23-431c-a6bd-2f02aa5de68a")
                        },
                        new
                        {
                            UserId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            RoleId = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c")
                        },
                        new
                        {
                            UserId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            RoleId = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c")
                        },
                        new
                        {
                            UserId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            RoleId = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c")
                        },
                        new
                        {
                            UserId = new Guid("23879117-e09e-40f1-b78f-1493d81baf49"),
                            RoleId = new Guid("51999f00-0f63-4236-8c81-94c43fcf7586")
                        },
                        new
                        {
                            UserId = new Guid("91b106fa-7b95-480f-a12a-0e0303454332"),
                            RoleId = new Guid("51999f00-0f63-4236-8c81-94c43fcf7586")
                        },
                        new
                        {
                            UserId = new Guid("537f05fd-120c-40b0-b2ec-639756f866ab"),
                            RoleId = new Guid("51999f00-0f63-4236-8c81-94c43fcf7586")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ActivationKeys", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("ActivationKeys")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.BanHistories", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "BannedByUser")
                        .WithMany("BansPerformed")
                        .HasForeignKey("BannedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "BannedUser")
                        .WithMany("BansReceived")
                        .HasForeignKey("BannedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BannedByUser");

                    b.Navigation("BannedUser");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialRegistrations", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.CommercialPackages", "CommercialPackage")
                        .WithMany("CommercialRegistrations")
                        .HasForeignKey("CommercialPackageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("CommercialRegistrations")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommercialPackage");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Discounts", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Discounts")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.DownloadSlots", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("DownloadSlots")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("DownloadSlots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameCensorLogs", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameCensorLogs")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "Moderator")
                        .WithMany("GameCensorLogs")
                        .HasForeignKey("ModeratorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Game");

                    b.Navigation("Moderator");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameImages", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Games")
                        .WithMany("GameImages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Games");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameLanguages", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameLanguages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Languages", "Language")
                        .WithMany("GameLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GamePlatforms", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Platforms", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GamePriceLogs", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GamePriceLogs")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameRecommendations", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameRecommendations")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("GameRecommendations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameTags", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameTags")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Tags", "Tag")
                        .WithMany("GameTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Games", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.AgeRestrictions", "AgeRestriction")
                        .WithMany("Games")
                        .HasForeignKey("AgeRestrictionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Categories", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "Developer")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgeRestriction");

                    b.Navigation("Category");

                    b.Navigation("Developer");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Libraries", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Libraries")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Libraries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Notifications", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Orders", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.ActivationKeys", "ActivationKey")
                        .WithOne("Order")
                        .HasForeignKey("IndieGameZone.Domain.Entities.Orders", "ActivationKeyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.CommercialPackages", "CommercialPackage")
                        .WithMany("Orders")
                        .HasForeignKey("CommercialPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Orders")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActivationKey");

                    b.Navigation("CommercialPackage");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostComments", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostComments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("PostComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostImages", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostImages")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostReactions", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostReactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("PostReactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Tags", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Posts", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Posts")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reports", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.PostComments", "PostComment")
                        .WithMany("Reports")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Reports")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("Reports")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.ReportReasons", "ReportReason")
                        .WithMany("Reports")
                        .HasForeignKey("ReportReasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "ReportingUser")
                        .WithMany("ReportingUsers")
                        .HasForeignKey("ReportingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany("ReportedUsers")
                        .HasForeignKey("UsersId");

                    b.Navigation("Game");

                    b.Navigation("Post");

                    b.Navigation("PostComment");

                    b.Navigation("ReportReason");

                    b.Navigation("ReportingUser");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reviews", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Transactions", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Transactions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Orders", "Order")
                        .WithOne("Transaction")
                        .HasForeignKey("IndieGameZone.Domain.Entities.Transactions", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "PurchaseUser")
                        .WithMany("PurchaseTransactions")
                        .HasForeignKey("PurchaseUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Order");

                    b.Navigation("PurchaseUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserAchievements", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Achievements", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserFollows", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "Followee")
                        .WithMany("Followees")
                        .HasForeignKey("FolloweeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "Follower")
                        .WithMany("Followers")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Followee");

                    b.Navigation("Follower");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserProfiles", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("IndieGameZone.Domain.Entities.UserProfiles", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wallets", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("IndieGameZone.Domain.Entities.Wallets", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wishlists", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Wishlists")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.WithdrawRequests", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("WithdrawRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Achievements", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ActivationKeys", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.AgeRestrictions", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Categories", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialPackages", b =>
                {
                    b.Navigation("CommercialRegistrations");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Games", b =>
                {
                    b.Navigation("ActivationKeys");

                    b.Navigation("CommercialRegistrations");

                    b.Navigation("Discounts");

                    b.Navigation("DownloadSlots");

                    b.Navigation("GameCensorLogs");

                    b.Navigation("GameImages");

                    b.Navigation("GameLanguages");

                    b.Navigation("GamePlatforms");

                    b.Navigation("GamePriceLogs");

                    b.Navigation("GameRecommendations");

                    b.Navigation("GameTags");

                    b.Navigation("Libraries");

                    b.Navigation("Orders");

                    b.Navigation("Posts");

                    b.Navigation("Reports");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Languages", b =>
                {
                    b.Navigation("GameLanguages");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Orders", b =>
                {
                    b.Navigation("Transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Platforms", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostComments", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Posts", b =>
                {
                    b.Navigation("PostComments");

                    b.Navigation("PostImages");

                    b.Navigation("PostReactions");

                    b.Navigation("PostTags");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ReportReasons", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Tags", b =>
                {
                    b.Navigation("GameTags");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Users", b =>
                {
                    b.Navigation("BansPerformed");

                    b.Navigation("BansReceived");

                    b.Navigation("DownloadSlots");

                    b.Navigation("Followees");

                    b.Navigation("Followers");

                    b.Navigation("GameCensorLogs");

                    b.Navigation("GameRecommendations");

                    b.Navigation("Games");

                    b.Navigation("Libraries");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("PostComments");

                    b.Navigation("PostReactions");

                    b.Navigation("Posts");

                    b.Navigation("PurchaseTransactions");

                    b.Navigation("ReportedUsers");

                    b.Navigation("ReportingUsers");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");

                    b.Navigation("UserAchievements");

                    b.Navigation("UserProfile")
                        .IsRequired();

                    b.Navigation("Wallet")
                        .IsRequired();

                    b.Navigation("Wishlists");

                    b.Navigation("WithdrawRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
