// <auto-generated />
using System;
using IndieGameZone.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IndieGameZone.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Achievements", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fef0c70d-cf7b-4c90-9865-383e660fda8a"),
                            Name = "First Purchase"
                        },
                        new
                        {
                            Id = new Guid("56e5cd8d-2d46-45dc-9006-f71920beea40"),
                            Name = "Buy 10 Games"
                        },
                        new
                        {
                            Id = new Guid("9c60bc27-9c8a-4be3-9e0d-1f4e96cb59a7"),
                            Name = "Buy 50 Games"
                        },
                        new
                        {
                            Id = new Guid("de08b771-763c-4e33-a97f-c627a2e790df"),
                            Name = "Buy 100 Games"
                        },
                        new
                        {
                            Id = new Guid("fbdc5b33-eef1-42aa-897f-e8f7de9f3179"),
                            Name = "Buy 250 Games"
                        },
                        new
                        {
                            Id = new Guid("6a95c38c-e765-4a9b-9adf-d640eeedb214"),
                            Name = "Buy 500 Games"
                        },
                        new
                        {
                            Id = new Guid("a94e99cb-9a99-4d4f-879b-4fa2f4b8a4c7"),
                            Name = "Buy 1000 Games (Platinum)"
                        },
                        new
                        {
                            Id = new Guid("b0ea7c96-6d5c-4199-9029-7f04e7502f66"),
                            Name = "Post 10 Threads"
                        },
                        new
                        {
                            Id = new Guid("5291fbd1-9926-4904-92bc-7f36c738c189"),
                            Name = "Post 50 Threads"
                        },
                        new
                        {
                            Id = new Guid("47c0b28f-43d2-496e-bfcb-f9df5aa2048d"),
                            Name = "Post 100 Threads"
                        },
                        new
                        {
                            Id = new Guid("f9d84647-6f77-4684-a39c-f5e671c181a1"),
                            Name = "Post 250 Threads"
                        },
                        new
                        {
                            Id = new Guid("8232bff1-9cc1-4b1d-aabd-03cf0b3b2448"),
                            Name = "Post 500 Threads"
                        },
                        new
                        {
                            Id = new Guid("e1719829-fd9f-4a14-bfe4-6d524b01300b"),
                            Name = "Post 1000 Threads (Platinum)"
                        },
                        new
                        {
                            Id = new Guid("f3e1b3e3-9ac3-41e3-83a6-83b44b76446b"),
                            Name = "Comment 10 Times"
                        },
                        new
                        {
                            Id = new Guid("d55f9b9a-d660-4c9a-bc35-94d7ef5a4eb3"),
                            Name = "Comment 50 Times"
                        },
                        new
                        {
                            Id = new Guid("2190f97e-1533-4c91-9152-f7ae9ec6f8c0"),
                            Name = "Comment 100 Times"
                        },
                        new
                        {
                            Id = new Guid("a76b7914-3d28-4bb9-8a6e-96f3953447e3"),
                            Name = "Comment 250 Times"
                        },
                        new
                        {
                            Id = new Guid("0d8f0c15-cdb8-4f99-a84e-d749474f9f98"),
                            Name = "Comment 500 Times"
                        },
                        new
                        {
                            Id = new Guid("bbf75b11-92d5-4bcf-8c2e-bb0c6a9b50e5"),
                            Name = "Comment 1000 Times (Platinum)"
                        },
                        new
                        {
                            Id = new Guid("8e8cbf44-001f-4060-bd8a-bc6213a81cc0"),
                            Name = "Like 10 Posts"
                        },
                        new
                        {
                            Id = new Guid("10b1990c-cce0-45ed-bcfd-d86ed7a3ae1c"),
                            Name = "Like 50 Posts"
                        },
                        new
                        {
                            Id = new Guid("d49ff353-2b75-4879-8a0b-4d7c16ed4a69"),
                            Name = "Like 100 Posts"
                        },
                        new
                        {
                            Id = new Guid("70e2f6b1-b748-4ce7-8b71-84995c37cd3c"),
                            Name = "Like 250 Posts"
                        },
                        new
                        {
                            Id = new Guid("2d3fcb09-5a7c-4268-9d86-248eb28a166d"),
                            Name = "Like 500 Posts"
                        },
                        new
                        {
                            Id = new Guid("bdde7288-0ec3-4726-9760-c802f4527c45"),
                            Name = "Like 1000 Posts (Platinum)"
                        },
                        new
                        {
                            Id = new Guid("b83dc1f6-cc35-4955-9a5d-3ae89a90e5d6"),
                            Name = "Follow 10 Developers"
                        },
                        new
                        {
                            Id = new Guid("b186aeb1-033f-4937-a24c-d11b1989e7e2"),
                            Name = "Follow 50 Developers"
                        },
                        new
                        {
                            Id = new Guid("5a8d9a1a-4b12-464b-8a70-d0309c3f355d"),
                            Name = "Follow 100 Developers"
                        },
                        new
                        {
                            Id = new Guid("ec14ae35-0147-470e-a927-03b999924b53"),
                            Name = "Follow 250 Developers"
                        },
                        new
                        {
                            Id = new Guid("ae30b8aa-cf63-474d-b42c-9b8e4479b31b"),
                            Name = "Follow 500 Developers"
                        },
                        new
                        {
                            Id = new Guid("8d1c8d65-2d84-4c86-a5b1-16de0aee3a34"),
                            Name = "Follow 1000 Developers (Platinum)"
                        },
                        new
                        {
                            Id = new Guid("a67ae3f1-e9fd-47cd-bc80-9a51753f52f1"),
                            Name = "Wishlist 10 Games"
                        },
                        new
                        {
                            Id = new Guid("61a86ea6-3db1-4a99-afe8-dbd178470cc2"),
                            Name = "Wishlist 50 Games"
                        },
                        new
                        {
                            Id = new Guid("24e0f221-e9a0-4c4d-a71d-1ed16ad6d36a"),
                            Name = "Wishlist 100 Games"
                        },
                        new
                        {
                            Id = new Guid("348ea355-5d52-4120-8794-b9022b4d3172"),
                            Name = "Wishlist 250 Games"
                        },
                        new
                        {
                            Id = new Guid("187f58aa-ecc1-4e65-9b76-f3fe37213ae3"),
                            Name = "Wishlist 500 Games"
                        },
                        new
                        {
                            Id = new Guid("6e1ea6cb-8d1d-4b4b-9316-195270d92c0f"),
                            Name = "Wishlist 1000 Games (Platinum)"
                        },
                        new
                        {
                            Id = new Guid("52cb47a2-2d10-4662-a36d-4f3fefca498b"),
                            Name = "Complete Profile (Fill all fields)"
                        },
                        new
                        {
                            Id = new Guid("1fc7e4c8-6a14-4b10-a54f-28c14a5bfae4"),
                            Name = "Early Adopter (Joined at launch)"
                        },
                        new
                        {
                            Id = new Guid("6b8a7ab1-bb17-4958-91c6-ff6d7a2ea880"),
                            Name = "Streak Master (30-day login streak)"
                        },
                        new
                        {
                            Id = new Guid("45a6e417-48aa-4ad8-8b89-0bc72c4edb62"),
                            Name = "Ultimate Streak (365-day streak)"
                        },
                        new
                        {
                            Id = new Guid("9e9c76d3-8d24-4f14-aaf1-c85cbb20c29d"),
                            Name = "Reviewer (Write 10 reviews)"
                        },
                        new
                        {
                            Id = new Guid("72b6b5e2-bff5-49ec-9770-b7a0bfa452f8"),
                            Name = "Critic (Write 50 reviews)"
                        },
                        new
                        {
                            Id = new Guid("ee7743cf-fdb3-4abf-85b1-9fa84b33fd06"),
                            Name = "Top Fan (Like 100+ posts in a month)"
                        },
                        new
                        {
                            Id = new Guid("e4a10952-4869-499e-90f2-743ef6ad2c0c"),
                            Name = "Explorer (Visit all categories)"
                        },
                        new
                        {
                            Id = new Guid("0f7b9b0f-f527-43cc-92f1-92fe4d03d09d"),
                            Name = "Omniscient (View every game page)"
                        },
                        new
                        {
                            Id = new Guid("6fc5791d-b726-41df-b524-d5286f316d69"),
                            Name = "Bug Hunter (Report 10 bugs)"
                        },
                        new
                        {
                            Id = new Guid("1a7902b5-b931-4050-a0bc-4df6bbd0b2a1"),
                            Name = "Philanthropist (Gift 10 games)"
                        },
                        new
                        {
                            Id = new Guid("ccae8845-7497-4cb9-9a0c-cd5102ce08f2"),
                            Name = "Tastemaker (Get 100 likes on a post)"
                        },
                        new
                        {
                            Id = new Guid("79447ee2-7653-4b48-90db-8c4a607b9db9"),
                            Name = "Legendary Tastemaker (Get 1000 likes on a post)"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.AgeRestrictions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AgeRestrictions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c91901a1-1b27-4e42-9b6f-869c920b1b1c"),
                            Code = "PEGI 3",
                            Description = "Suitable for all age groups. No sounds or pictures likely to frighten young children."
                        },
                        new
                        {
                            Id = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            Code = "PEGI 7",
                            Description = "May contain some frightening scenes or sounds."
                        },
                        new
                        {
                            Id = new Guid("32d6d768-d670-4ef5-acaa-fcfe4c8167d3"),
                            Code = "PEGI 12",
                            Description = "May contain violence of a more graphic nature towards fantasy characters, or mild bad language."
                        },
                        new
                        {
                            Id = new Guid("3df25298-5f31-4639-a3a0-425ae4db72ca"),
                            Code = "PEGI 16",
                            Description = "More realistic violence, sexual activity, use of tobacco or alcohol, and stronger language."
                        },
                        new
                        {
                            Id = new Guid("92ca7f1e-94c3-4c48-a468-61d3bab8f0b9"),
                            Code = "PEGI 18",
                            Description = "Depictions of gross violence, sexual violence, or content that glamorizes illegal drug use."
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.BanHistories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UnbanDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BanHistories");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Categories", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("77c89b32-78e3-4fea-915f-4b8df819ffa2"),
                            Name = "Visual Novel"
                        },
                        new
                        {
                            Id = new Guid("89a4e6d2-2cfe-4474-9b96-6d3595ad4705"),
                            Name = "Role-Playing"
                        },
                        new
                        {
                            Id = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("39b71d75-ed24-461a-8dbf-e4fa9ae425fc"),
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = new Guid("bca8721b-c323-44a1-afcf-876e206ab035"),
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = new Guid("cd1fb8a2-c34e-4fc4-bbbd-9931a0c6ce0e"),
                            Name = "Interactive Fiction"
                        },
                        new
                        {
                            Id = new Guid("ab34908d-20dc-43bd-b80d-eac5b59d6238"),
                            Name = "Survival"
                        },
                        new
                        {
                            Id = new Guid("4d84bb23-8644-4720-8344-d4a9d0433d35"),
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = new Guid("929c6ef0-41e5-4bc5-9ef9-86f0703b9c20"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("592e7334-c896-46f6-ad6c-a781a2ab7219"),
                            Name = "Card Game"
                        },
                        new
                        {
                            Id = new Guid("b277ba85-f89b-4617-a464-49cda6e8d387"),
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = new Guid("88fd3b90-179a-4c18-8c3a-5f3929992e0a"),
                            Name = "Racing"
                        },
                        new
                        {
                            Id = new Guid("5e1afbc9-31dd-417d-ae49-baa45d6d5797"),
                            Name = "Educational"
                        },
                        new
                        {
                            Id = new Guid("a5a8e1af-bbea-4029-99fe-42912e7c7ba2"),
                            Name = "Rhythm"
                        },
                        new
                        {
                            Id = new Guid("3623f541-4b87-4174-bfce-dd2b027c7a33"),
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialPackages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CommercialPackages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("856314ae-b364-4d83-94ba-f11600c88cff"),
                            Description = "Displays a banner on the homepage for 1 day.",
                            Duration = 1.0,
                            Name = "Homepage Banner - Daily",
                            Price = 20000.0
                        },
                        new
                        {
                            Id = new Guid("4bfbc5f2-bef6-44ff-a5c4-baaff953f651"),
                            Description = "Displays a banner on the homepage for 7 days.",
                            Duration = 7.0,
                            Name = "Homepage Banner - Weekly",
                            Price = 80000.0
                        },
                        new
                        {
                            Id = new Guid("8f451273-fe64-4c67-80e9-84ee20733ddd"),
                            Description = "Displays a banner on the homepage for 30 days.",
                            Duration = 30.0,
                            Name = "Homepage Banner - Monthly",
                            Price = 310000.0
                        },
                        new
                        {
                            Id = new Guid("854bb0e5-ecf6-4bc8-a5f7-1d9e27d27e73"),
                            Description = "Displays a banner on a category page for 1 day.",
                            Duration = 1.0,
                            Name = "Category Banner - Daily",
                            Price = 10000.0
                        },
                        new
                        {
                            Id = new Guid("0efbfb71-599d-4233-a598-1595615810e1"),
                            Description = "Displays a banner on a category page for 7 days.",
                            Duration = 7.0,
                            Name = "Category Banner - Weekly",
                            Price = 60000.0
                        },
                        new
                        {
                            Id = new Guid("a9758e65-b0d6-4dd1-8272-fe1f2cb4794e"),
                            Description = "Displays a banner on a category page for 30 days.",
                            Duration = 30.0,
                            Name = "Category Banner - Monthly",
                            Price = 230000.0
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CommercialPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CommercialPackageId");

                    b.HasIndex("GameId");

                    b.ToTable("CommercialRegistration");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Coupons", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Discounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02e6a0ab-2720-4368-8b80-9eb3f46eece0"),
                            EndDate = new DateOnly(2025, 6, 13),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Percentage = 10.0,
                            StartDate = new DateOnly(2025, 6, 3)
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameImages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameImages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2212b056-b7e1-4bd4-a258-aae3e24f9a87"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage1.png"
                        },
                        new
                        {
                            Id = new Guid("396cf491-b737-4983-a65e-42ecd36080d7"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage2.png"
                        },
                        new
                        {
                            Id = new Guid("dc5e81ec-24b6-4109-ba9f-e9de4ad9a855"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage3.png"
                        },
                        new
                        {
                            Id = new Guid("81738026-cd42-482c-a692-f080a6fe9240"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage4.png"
                        },
                        new
                        {
                            Id = new Guid("d3e36747-a19a-41ff-b8a1-1c274e378dab"),
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatImage5.png"
                        },
                        new
                        {
                            Id = new Guid("67a4a329-1816-4762-ab1f-6dbe8a4859a6"),
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftImage1.png"
                        },
                        new
                        {
                            Id = new Guid("7e664e60-d9ef-49cf-b15e-04ef7794ff8c"),
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftImage2.png"
                        },
                        new
                        {
                            Id = new Guid("bbc61c64-fa64-4eb8-ab0b-f18014c4c2c3"),
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftImage3.png"
                        },
                        new
                        {
                            Id = new Guid("c70e309b-4038-4f48-80f2-55067f552f71"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic1.png"
                        },
                        new
                        {
                            Id = new Guid("3e0a38d2-fb6c-443f-92ca-2e53e62a61d4"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic2.png"
                        },
                        new
                        {
                            Id = new Guid("265b4035-41fc-4a0a-a3b4-e901e82c7689"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic3.png"
                        },
                        new
                        {
                            Id = new Guid("18c5be9a-7a63-4b57-a640-5b5e09400955"),
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic4.png"
                        },
                        new
                        {
                            Id = new Guid("86064f5b-fc05-4058-a6eb-46d66352e7c0"),
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher1.png"
                        },
                        new
                        {
                            Id = new Guid("2b158ea6-3ab6-46d7-80cc-cf35d93929d7"),
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher2.png"
                        },
                        new
                        {
                            Id = new Guid("7175a006-e7e4-4b0f-a839-a747c71437f8"),
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher3.png"
                        },
                        new
                        {
                            Id = new Guid("32573ac1-e5ab-4546-ad87-0b837270662c"),
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop1.png"
                        },
                        new
                        {
                            Id = new Guid("1c40cc4e-4334-4130-b56d-e68657f1df6a"),
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop2.png"
                        },
                        new
                        {
                            Id = new Guid("07ea50a1-67a4-4827-a9ec-87076fcf03c3"),
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop3.png"
                        },
                        new
                        {
                            Id = new Guid("ec135ce9-55d8-46a1-8b9e-1e109d94594f"),
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage1.png"
                        },
                        new
                        {
                            Id = new Guid("35d27929-a2bb-4573-8a92-4c69dbb5df13"),
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage2.png"
                        },
                        new
                        {
                            Id = new Guid("babd105f-82f4-485b-baf3-400b4a7e4ea3"),
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage3.png"
                        },
                        new
                        {
                            Id = new Guid("a711e6fe-80b6-45d6-a5dc-d058218c899a"),
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage1.png"
                        },
                        new
                        {
                            Id = new Guid("0949ea2f-3012-41e7-830a-85b71a1a0c46"),
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage2.png"
                        },
                        new
                        {
                            Id = new Guid("0d14053a-5761-49f1-bc73-86f2fe097373"),
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage3.png"
                        },
                        new
                        {
                            Id = new Guid("24c6d152-3e2f-4d02-933d-63e85a27081a"),
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage1.jpg"
                        },
                        new
                        {
                            Id = new Guid("b0dcd49b-380c-4117-81ca-3df3c524941a"),
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage2.jpg"
                        },
                        new
                        {
                            Id = new Guid("d6045d8d-c215-412f-8921-d3d9273b5f84"),
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage3.jpg"
                        },
                        new
                        {
                            Id = new Guid("0b058f85-e3e0-4cd9-95ad-cb7ec0857e3d"),
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage1.png"
                        },
                        new
                        {
                            Id = new Guid("44518daf-b9f8-410b-87ce-8a97bc5abc85"),
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage2.png"
                        },
                        new
                        {
                            Id = new Guid("e879af8b-6859-4a2a-bb8f-32610b2b6b4c"),
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage3.png"
                        },
                        new
                        {
                            Id = new Guid("4fd9dbd9-29f7-4719-9675-eed5e452cdc2"),
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage1.png"
                        },
                        new
                        {
                            Id = new Guid("83a9e011-69aa-4b1e-bf56-8f9f51ac23dd"),
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage2.png"
                        },
                        new
                        {
                            Id = new Guid("b124b5d1-4e98-4129-8573-12fcbdd29dab"),
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            Image = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage3.png"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameLanguages", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GameLanguages");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            LanguageId = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527")
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GamePlatforms", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseat_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShift_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            PlatformId = new Guid("574cb883-e637-4f18-9518-269e4d22312c"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic_Macos.zip"
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            PlatformId = new Guid("db498cbb-c76f-4166-9836-8ecb462419e6"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelic_Linux.zip"
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Moldwasher_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Latestop_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlace_Window.rar"
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Pacside_Window.rar"
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Sheepy_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Daughter_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            PlatformId = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Missing_Window.zip"
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            PlatformId = new Guid("574cb883-e637-4f18-9518-269e4d22312c"),
                            File = "https://indiegamezone.blob.core.windows.net/indiegamezone/Missing_Mac.zip"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameRecommendations", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("GameRecommendations");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameTags", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("GameTags");

                    b.HasData(
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("1c175c84-379e-43dc-a95a-aafd910d6a00")
                        },
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            TagId = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac")
                        },
                        new
                        {
                            GameId = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            TagId = new Guid("e4e35307-2071-4a75-88fc-579db0077703")
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            TagId = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            TagId = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        },
                        new
                        {
                            GameId = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            TagId = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708")
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            TagId = new Guid("7d5d4e96-d0fa-440e-914f-1667b6ef54c1")
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            TagId = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d")
                        },
                        new
                        {
                            GameId = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            TagId = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301")
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Games", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgeRestrictionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllowDonation")
                        .HasColumnType("bit");

                    b.Property<double>("AverageSession")
                        .HasColumnType("float");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CensoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CoverImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DeveloperId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VideoLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgeRestrictionId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DeveloperId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65745560-c7e9-48c3-bc36-8c88d66458c7"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/TheDeadseatCoverImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 890, DateTimeKind.Local).AddTicks(9917),
                            Description = "",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            Name = "The Deadseat",
                            Price = 100000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=Q4A2c8-BN78&t=2s"
                        },
                        new
                        {
                            Id = new Guid("5763f752-914c-4436-803f-4410118774a3"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MidnightShiftCoverImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 890, DateTimeKind.Local).AddTicks(9932),
                            Description = "",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            Name = "MidnightShift",
                            Price = 150000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=v1oeNEKiwTg"
                        },
                        new
                        {
                            Id = new Guid("6e55d2c1-fe9f-477d-bf58-125d73d0c26d"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 3.0,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/BrokenRelicCoverImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 890, DateTimeKind.Local).AddTicks(9939),
                            Description = "",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            Name = "Broken Relic",
                            Price = 200000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=ColSNi0XD6Q"
                        },
                        new
                        {
                            Id = new Guid("b2fd90a7-5714-489e-b952-31b59a058db1"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.0,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MoldwasherCoverImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 890, DateTimeKind.Local).AddTicks(9944),
                            Description = "",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            Name = "Moldwasher",
                            Price = 120000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=6KGgPoY7TbY"
                        },
                        new
                        {
                            Id = new Guid("0f78b4ed-b351-4517-89fc-a05f07570e44"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.0,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MoldwasherCoverImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 890, DateTimeKind.Local).AddTicks(9996),
                            Description = "",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            Name = "Latestop",
                            Price = 100000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=WJKp2xT4QTs"
                        },
                        new
                        {
                            Id = new Guid("381c9309-d036-4c9a-a651-d8ebf631528e"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/QuietPlaceImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 891, DateTimeKind.Local).AddTicks(2),
                            Description = "",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            Name = "QuietPlace",
                            Price = 50000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=gjV5Vdf04UY&t=1s"
                        },
                        new
                        {
                            Id = new Guid("f6935d98-bd02-4716-a968-3bc870e6233b"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.5,
                            CategoryId = new Guid("7a03afa3-2635-43bd-a58c-daeb80d3cef7"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/PacsideImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 891, DateTimeKind.Local).AddTicks(7),
                            Description = "",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            Name = "Pacside",
                            Price = 75000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=yxt7w5VRQ_w"
                        },
                        new
                        {
                            Id = new Guid("a28f1bb3-f30d-4895-81b0-58deec580a1d"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.5,
                            CategoryId = new Guid("dfeeb47a-7e69-4927-a65b-b803a8befe9f"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/SheepyImage.jpg",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 891, DateTimeKind.Local).AddTicks(11),
                            Description = "",
                            DeveloperId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            Name = "Sheepy",
                            Price = 75000.0,
                            Status = 1,
                            VideoLink = "https://www.youtube.com/watch?v=RRs_AI96h-w"
                        },
                        new
                        {
                            Id = new Guid("a670e609-db94-42b5-b196-f618e79ce15b"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 1.0,
                            CategoryId = new Guid("2d740ce2-a803-4b32-8df8-ab5139203742"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/DaughterImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 891, DateTimeKind.Local).AddTicks(15),
                            Description = "",
                            DeveloperId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            Name = "Daughter",
                            Price = 75000.0,
                            Status = 1,
                            VideoLink = ""
                        },
                        new
                        {
                            Id = new Guid("8dd6053e-f3b1-4019-8898-668208f4dd31"),
                            AgeRestrictionId = new Guid("c48f1c63-f301-44e9-8766-3d4b60134b5f"),
                            AllowDonation = false,
                            AverageSession = 0.5,
                            CategoryId = new Guid("77c89b32-78e3-4fea-915f-4b8df819ffa2"),
                            CoverImage = "https://indiegamezone.blob.core.windows.net/indiegamezone/MissingImage.png",
                            CreatedAt = new DateTime(2025, 6, 3, 23, 37, 3, 891, DateTimeKind.Local).AddTicks(21),
                            Description = "",
                            DeveloperId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            Name = "Missing",
                            Price = 60000.0,
                            Status = 1,
                            VideoLink = ""
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Languages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80e3581d-3836-4921-a838-b7d917b5e11f"),
                            Name = "Vietnamese"
                        },
                        new
                        {
                            Id = new Guid("8f29f2a5-146d-44df-95ba-a972e36b7527"),
                            Name = "English"
                        },
                        new
                        {
                            Id = new Guid("2f98f2c8-2640-4cff-a8eb-ed61d9179dcb"),
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = new Guid("ae4f3cfb-6dd6-473b-a1c6-695f9edce11e"),
                            Name = "French"
                        },
                        new
                        {
                            Id = new Guid("73b3d9d2-ecbf-4d91-95ad-e9a48b7e54cd"),
                            Name = "German"
                        },
                        new
                        {
                            Id = new Guid("11a64feb-23f6-41ad-a55f-a9f487d04a85"),
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = new Guid("04adfb56-cb77-4209-8fc3-a7b96b768784"),
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = new Guid("3ec80948-8c1a-46aa-9fd6-01feeb273c22"),
                            Name = "Russian"
                        },
                        new
                        {
                            Id = new Guid("149615f6-6214-4e42-a016-1dba7d248c0f"),
                            Name = "Korean"
                        },
                        new
                        {
                            Id = new Guid("ca29265a-4bab-4aa1-a819-9636878b50da"),
                            Name = "Portuguese"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Libraries", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Notifications", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Platforms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a47b287d-6ed7-4bb0-be73-c2581dcb9b3e"),
                            Name = "Windows"
                        },
                        new
                        {
                            Id = new Guid("db498cbb-c76f-4166-9836-8ecb462419e6"),
                            Name = "Linux"
                        },
                        new
                        {
                            Id = new Guid("574cb883-e637-4f18-9518-269e4d22312c"),
                            Name = "MacOS"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostComments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("PostComments");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostReactions", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PostId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("PostReactions");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostTags", b =>
                {
                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Posts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CensoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ReportTypes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReportTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("77cf1c6b-bc98-4c98-8a7e-27f2c4b45377"),
                            Name = "Inappropriate Content"
                        },
                        new
                        {
                            Id = new Guid("8b92d32e-0aa0-4f88-bc43-0e04c4121e0e"),
                            Name = "Copyright Infringement"
                        },
                        new
                        {
                            Id = new Guid("1c0d2f16-1f4a-4c5e-9c26-2e86e0cfa28f"),
                            Name = "Malicious Behavior"
                        },
                        new
                        {
                            Id = new Guid("59eff953-9268-4488-9f2a-0ce3a5b80ac3"),
                            Name = "Scam or Fraud"
                        },
                        new
                        {
                            Id = new Guid("78e8165a-c263-4790-b0f4-21d2398c3d82"),
                            Name = "Performance Issues"
                        },
                        new
                        {
                            Id = new Guid("baf14634-874b-461b-b44d-3c5d261fbdc8"),
                            Name = "Other"
                        },
                        new
                        {
                            Id = new Guid("32992805-dcef-427a-afb8-239c79cb4de9"),
                            Name = "Offensive Language"
                        },
                        new
                        {
                            Id = new Guid("7fb483f2-3499-4f56-a22f-af191fac0411"),
                            Name = "False Information"
                        },
                        new
                        {
                            Id = new Guid("b348e5d5-55ea-48ed-a5fe-b3cc56c8a7b1"),
                            Name = "Harassment"
                        },
                        new
                        {
                            Id = new Guid("3f36c22a-5f0d-4f02-ab65-b47a22ae81a7"),
                            Name = "Political or Religious Extremism"
                        },
                        new
                        {
                            Id = new Guid("a8eae5df-0705-4021-835c-75c12df9b2f2"),
                            Name = "Off-topic"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reports", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CommentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReportTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReportedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReportingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CommentId");

                    b.HasIndex("GameId");

                    b.HasIndex("PostId");

                    b.HasIndex("ReportTypeId");

                    b.HasIndex("ReportedUserId");

                    b.HasIndex("ReportingUserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reviews", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f7b3f0c-3f54-4fb8-a215-33cd496c3be7"),
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("7211a346-6e23-431c-a6bd-2f02aa5de68a"),
                            Name = "Moderator",
                            NormalizedName = "MODERATOR"
                        },
                        new
                        {
                            Id = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c"),
                            Name = "Developer",
                            NormalizedName = "DEVELOPER"
                        },
                        new
                        {
                            Id = new Guid("51999f00-0f63-4236-8c81-94c43fcf7586"),
                            Name = "Player",
                            NormalizedName = "PLAYER"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Tags", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd543d0f-1761-4874-945b-53863f00942b"),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("5452906a-03b1-45df-b4f0-a65398885171"),
                            Name = "Visual Novel"
                        },
                        new
                        {
                            Id = new Guid("4d1a6086-ed27-4767-8fb6-4c4af12c384c"),
                            Name = "Role-Playing"
                        },
                        new
                        {
                            Id = new Guid("1c175c84-379e-43dc-a95a-aafd910d6a00"),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("130d3ae5-7c92-4d37-9082-13226dd0d9af"),
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = new Guid("71918e61-bb0b-4ca1-975a-616d869769bf"),
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = new Guid("b9e9a223-25b3-491b-ba92-e185a74d82ab"),
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = new Guid("f57af0bf-7612-4b08-84f3-be98a842f932"),
                            Name = "Interactive Fiction"
                        },
                        new
                        {
                            Id = new Guid("46c0001e-beb3-4291-885a-f076e53f40fd"),
                            Name = "Survival"
                        },
                        new
                        {
                            Id = new Guid("c04cba4a-a827-4a49-b61b-f02798ef17c9"),
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = new Guid("c7cee309-8f38-43fd-8512-e40e4d6f1ccd"),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = new Guid("a137e663-30d5-4ed9-8aa3-b9b500f18de7"),
                            Name = "Card Game"
                        },
                        new
                        {
                            Id = new Guid("41c1f4f5-4cf0-411b-bb15-e59f15b04762"),
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = new Guid("aa592c96-400a-4c67-bf18-3b82823e9ef9"),
                            Name = "Racing"
                        },
                        new
                        {
                            Id = new Guid("8c202501-893d-427e-9faf-47e2f1d6ba2d"),
                            Name = "Educational"
                        },
                        new
                        {
                            Id = new Guid("a0f1e28b-a439-4e72-aed8-0baddbb515c2"),
                            Name = "Rhythm"
                        },
                        new
                        {
                            Id = new Guid("3d76f55a-a3c8-4f51-a959-6a36c90ba4bd"),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("b0c8f1d2-3e4a-4c5b-9f6d-7f8e9a0b1c2d"),
                            Name = "Horror"
                        },
                        new
                        {
                            Id = new Guid("fcf4e928-dc77-405c-a13e-1d1d5e308d6b"),
                            Name = "2D"
                        },
                        new
                        {
                            Id = new Guid("37223e27-41ad-44cb-9332-d985dbc9f708"),
                            Name = "Pixel Art"
                        },
                        new
                        {
                            Id = new Guid("3ef686ac-5e11-45d8-afab-223d2d149f6f"),
                            Name = "3D"
                        },
                        new
                        {
                            Id = new Guid("0a0af88e-6860-445b-b7ce-b10f46e8dea3"),
                            Name = "First-Person"
                        },
                        new
                        {
                            Id = new Guid("b6dd9e32-eaf5-4942-9c18-566421ca2e90"),
                            Name = "Top-Down"
                        },
                        new
                        {
                            Id = new Guid("f503a37e-dff0-45a8-8ae8-58ccefa4c9d3"),
                            Name = "Low-Poly"
                        },
                        new
                        {
                            Id = new Guid("9636813b-f393-4adb-b9a7-44f877f67ae5"),
                            Name = "8-Bit"
                        },
                        new
                        {
                            Id = new Guid("3e7412cc-2817-4d03-9dcf-7c3c7e619186"),
                            Name = "16-Bit"
                        },
                        new
                        {
                            Id = new Guid("f3527a12-03c3-417d-9dd1-6130e7fcfe3e"),
                            Name = "16x16"
                        },
                        new
                        {
                            Id = new Guid("f8d13d4f-1a7b-406b-aa6e-4f37d8cebacf"),
                            Name = "Hand-Drawn"
                        },
                        new
                        {
                            Id = new Guid("8c13bf31-2b82-4452-9a5c-2968c01e1dac"),
                            Name = "Colorful"
                        },
                        new
                        {
                            Id = new Guid("22ad33b0-8358-4054-aa6b-59a2b5296842"),
                            Name = "Isometric"
                        },
                        new
                        {
                            Id = new Guid("aa580b0a-12c6-4d95-8d4f-c68fdd8cfbd9"),
                            Name = "32x32"
                        },
                        new
                        {
                            Id = new Guid("569a2ff2-5259-4467-9824-a3f2c5a595f7"),
                            Name = "1-Bit"
                        },
                        new
                        {
                            Id = new Guid("621f12a7-89cb-4b97-83c0-cd3e84774dd4"),
                            Name = "Third-Person"
                        },
                        new
                        {
                            Id = new Guid("ab6e601e-52c3-45dc-97c3-1c6e84732769"),
                            Name = "Cartoon"
                        },
                        new
                        {
                            Id = new Guid("bc50196f-6aa1-49c2-9347-33f4ef15b8d6"),
                            Name = "Black and White"
                        },
                        new
                        {
                            Id = new Guid("8fdfc2fc-b9ae-49a4-9aa5-e986cdf9f65a"),
                            Name = "Neon"
                        },
                        new
                        {
                            Id = new Guid("62c2fe13-f1d2-4905-b3e1-166598e091fb"),
                            Name = "8x8"
                        },
                        new
                        {
                            Id = new Guid("8db1d14f-c82c-4a06-bd60-456350a62594"),
                            Name = "Non-Eucledian"
                        },
                        new
                        {
                            Id = new Guid("e27b19a2-12d7-4a55-a8e4-7ff3487db712"),
                            Name = "Pastel"
                        },
                        new
                        {
                            Id = new Guid("48239920-0a09-438e-8320-6b822e01f8bb"),
                            Name = "Two Colors"
                        },
                        new
                        {
                            Id = new Guid("9c685bd3-c75f-48df-8043-20c2fe181e7f"),
                            Name = "Watercolor"
                        },
                        new
                        {
                            Id = new Guid("048cbb0b-d39e-4f1d-b1d7-e28aeb6fc6e6"),
                            Name = "Grayscale"
                        },
                        new
                        {
                            Id = new Guid("7e3be5eb-bf83-4450-9ecb-70535267d3ea"),
                            Name = "Flat-Shading"
                        },
                        new
                        {
                            Id = new Guid("e4e35307-2071-4a75-88fc-579db0077703"),
                            Name = "Unity"
                        },
                        new
                        {
                            Id = new Guid("611e1869-df31-4ec1-b063-7c9ae49bfb30"),
                            Name = "RPG Maker"
                        },
                        new
                        {
                            Id = new Guid("6cc4c52b-3b0e-4641-9997-8a1e6c29753b"),
                            Name = "Godot"
                        },
                        new
                        {
                            Id = new Guid("cd37e2fc-cb7e-45c3-90d6-87c690a2aaf3"),
                            Name = "Ren’Py"
                        },
                        new
                        {
                            Id = new Guid("7d5d4e96-d0fa-440e-914f-1667b6ef54c1"),
                            Name = "Unreal Engine"
                        },
                        new
                        {
                            Id = new Guid("7cc2168e-4ad6-409f-9868-bd59df589d8c"),
                            Name = "Guide 📖"
                        },
                        new
                        {
                            Id = new Guid("e50d38ef-93f6-4f52-a55b-0dbf8188f91f"),
                            Name = "Discussion 💬"
                        },
                        new
                        {
                            Id = new Guid("85a1abde-9980-4cc7-976e-1d4135ffddff"),
                            Name = "Review ★"
                        },
                        new
                        {
                            Id = new Guid("229ef81c-f48f-49ae-a9a1-149f71d54d77"),
                            Name = "Showcase 🎨"
                        },
                        new
                        {
                            Id = new Guid("da2b3f32-20fc-4a62-a16f-f87fbe4696fb"),
                            Name = "Question ❓"
                        },
                        new
                        {
                            Id = new Guid("510d85f4-c8dc-4228-93cb-311809751bed"),
                            Name = "Multiplayer"
                        },
                        new
                        {
                            Id = new Guid("ad95ed3f-284a-45d4-adc2-75b4f3681301"),
                            Name = "Singleplayer"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Transactions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("OrderCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("OrderCode")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserAchievements", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AchievementId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "AchievementId");

                    b.HasIndex("AchievementId");

                    b.ToTable("UserAchievements");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserFollows", b =>
                {
                    b.Property<Guid>("FollowingUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FollowedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("FollowingUserId", "FollowedUserId");

                    b.HasIndex("FollowedUserId");

                    b.ToTable("UserFollows");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserProfiles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("FacebookLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccount = "",
                            BankName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Admin"
                        },
                        new
                        {
                            UserId = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            Avatar = "https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=170667a&w=0&h=zP3l7WJinOFaGb2i1F4g8IS2ylw0FlIaa6x3tP9sebU=",
                            BankAccount = "",
                            BankName = "",
                            Bio = "",
                            Birthday = new DateOnly(2002, 1, 23),
                            FacebookLink = "",
                            Fullname = "Moderator"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7854ef7d-f596-4fa5-8c12-4a737d6a8716",
                            Email = "admin@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 6, 3, 23, 37, 3, 905, DateTimeKind.Local).AddTicks(289),
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEPQw9wgAu3DQGJ8dqalL8PWPwxufeYMeQ48wwbFiO6SUMDztAATJAa3OOS1QCE1LKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "82369999-b6f2-4228-922b-40d80cd77b38",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "092c9cfc-30f0-47f5-a4d7-ca896a6fc2da",
                            Email = "moderator@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 6, 3, 23, 37, 3, 974, DateTimeKind.Local).AddTicks(3105),
                            LockoutEnabled = true,
                            NormalizedEmail = "MODERATOR@GMAIL.COM",
                            NormalizedUserName = "MODERATOR",
                            PasswordHash = "AQAAAAIAAYagAAAAEP9lOUxKqjnvi+dpF743sU9WRTnDVBa9P3KVyw4IY7znV3DmU6MfML6+3/GsGt3KXQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e7bb5fa2-5b9f-49fd-80e1-6f1d3ed63712",
                            TwoFactorEnabled = false,
                            UserName = "moderator"
                        },
                        new
                        {
                            Id = new Guid("23879117-e09e-40f1-b78f-1493d81baf49"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c3387860-7a43-4f9e-9d59-3e5832bec2e9",
                            Email = "player@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 6, 3, 23, 37, 4, 33, DateTimeKind.Local).AddTicks(3804),
                            LockoutEnabled = true,
                            NormalizedEmail = "PLAYER@GMAIL.COM",
                            NormalizedUserName = "PLAYER",
                            PasswordHash = "AQAAAAIAAYagAAAAEFt+TqXG4JbdGynCXMw0jCOU+HojdDKaZE+LE14xtGicrWqQ9bC7cP1SF51UgON7DA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cad602e3-8793-4a30-b61f-be4704b3dcf9",
                            TwoFactorEnabled = false,
                            UserName = "player"
                        },
                        new
                        {
                            Id = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1881ff10-d1ff-4f43-8c0a-a63231e44858",
                            Email = "developer1@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 6, 3, 23, 37, 4, 88, DateTimeKind.Local).AddTicks(7325),
                            LockoutEnabled = true,
                            NormalizedEmail = "DEVELOPER1@GMAIL.COM",
                            NormalizedUserName = "DEVELOPER1",
                            PasswordHash = "AQAAAAIAAYagAAAAEDlLreFM3HkGX7JQ+5LKMJ7P99DLrtgf2zeiIwSrKlyz0COSrRNkw7AteOZyzDn7WQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "33da47f3-6686-4dfe-980f-4e16942fa4fc",
                            TwoFactorEnabled = false,
                            UserName = "developer1"
                        },
                        new
                        {
                            Id = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3ab7ab69-f0c8-4b17-8fd2-bcf1c86d0188",
                            Email = "developer2@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 6, 3, 23, 37, 4, 145, DateTimeKind.Local).AddTicks(293),
                            LockoutEnabled = true,
                            NormalizedEmail = "DEVELOPER2@GMAIL.COM",
                            NormalizedUserName = "DEVELOPER2",
                            PasswordHash = "AQAAAAIAAYagAAAAEMPU/7U75mNegDtnW1peW1gkVnP/FKtoJSrx6JfhfL6gSoG72YC6T7vinRqZwkkqFg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a692d5b3-b6ff-4859-97c9-3bb3db272ea6",
                            TwoFactorEnabled = false,
                            UserName = "developer2"
                        },
                        new
                        {
                            Id = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "97bfa76f-2aeb-425f-b0ac-8ccdb29f5b8b",
                            Email = "developer3@gmail.com",
                            EmailConfirmed = true,
                            IsActive = true,
                            JoinedDate = new DateTime(2025, 6, 3, 23, 37, 4, 199, DateTimeKind.Local).AddTicks(8015),
                            LockoutEnabled = true,
                            NormalizedEmail = "DEVELOPER3@GMAIL.COM",
                            NormalizedUserName = "DEVELOPER3",
                            PasswordHash = "AQAAAAIAAYagAAAAEK0cjochOBRery5xDYh5U74FmHdjM7mO3Id+WXZQ8YAlRpsxZcGBSlbHBv2Xo1Racw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a037032a-c4a9-4ddc-ae58-0735654c9557",
                            TwoFactorEnabled = false,
                            UserName = "developer3"
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wallets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.HasKey("UserId");

                    b.ToTable("Wallets");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            Balance = 0.0
                        },
                        new
                        {
                            UserId = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            Balance = 0.0
                        });
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wishlists", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("GameId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.WithdrawRequests", b =>
                {
                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageProof")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTransfered")
                        .HasColumnType("bit");

                    b.HasKey("TransactionId");

                    b.ToTable("WithdrawRequests");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e5d8947f-6794-42b6-ba67-201f366128b8"),
                            RoleId = new Guid("6f7b3f0c-3f54-4fb8-a215-33cd496c3be7")
                        },
                        new
                        {
                            UserId = new Guid("3fe77296-fdb3-4d71-8b99-ef8380c32037"),
                            RoleId = new Guid("7211a346-6e23-431c-a6bd-2f02aa5de68a")
                        },
                        new
                        {
                            UserId = new Guid("293191b7-f7b2-4f28-8857-5afa96866a2f"),
                            RoleId = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c")
                        },
                        new
                        {
                            UserId = new Guid("c25dc5ef-4e98-421e-90d3-7eb76ba269fe"),
                            RoleId = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c")
                        },
                        new
                        {
                            UserId = new Guid("34670beb-a794-4419-adf8-0465eea22a78"),
                            RoleId = new Guid("b86a5b00-0393-4524-9f56-fa7ca800e79c")
                        },
                        new
                        {
                            UserId = new Guid("23879117-e09e-40f1-b78f-1493d81baf49"),
                            RoleId = new Guid("51999f00-0f63-4236-8c81-94c43fcf7586")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.BanHistories", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("BanHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialRegistration", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.CommercialPackages", "CommercialPackage")
                        .WithMany("CommercialRegistrations")
                        .HasForeignKey("CommercialPackageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("CommercialRegistration")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommercialPackage");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Coupons", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Coupons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Discounts", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Discounts")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameImages", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Games")
                        .WithMany("GameImages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Games");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameLanguages", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameLanguages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Languages", "Language")
                        .WithMany("GameLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GamePlatforms", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Platforms", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameRecommendations", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameRecommendations")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("GameRecommendations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.GameTags", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("GameTags")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Tags", "Tag")
                        .WithMany("GameTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Games", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.AgeRestrictions", "AgeRestriction")
                        .WithMany("Games")
                        .HasForeignKey("AgeRestrictionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Categories", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "Developers")
                        .WithMany("Games")
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgeRestriction");

                    b.Navigation("Category");

                    b.Navigation("Developers");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Libraries", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Libraries")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Libraries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Notifications", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostComments", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostComments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("PostComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostReactions", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostReactions")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("PostReactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostTags", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Tags", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Posts", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Posts")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reports", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.PostComments", "PostComment")
                        .WithMany("Reports")
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Reports")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Posts", "Post")
                        .WithMany("Reports")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.ReportTypes", "ReportType")
                        .WithMany("Reports")
                        .HasForeignKey("ReportTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "ReportedUser")
                        .WithMany("ReportedUsers")
                        .HasForeignKey("ReportedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "ReportingUser")
                        .WithMany("ReportingUsers")
                        .HasForeignKey("ReportingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Post");

                    b.Navigation("PostComment");

                    b.Navigation("ReportType");

                    b.Navigation("ReportedUser");

                    b.Navigation("ReportingUser");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Reviews", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Transactions", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Transactions")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserAchievements", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Achievements", "Achievement")
                        .WithMany("UserAchievements")
                        .HasForeignKey("AchievementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("UserAchievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Achievement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserFollows", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "FollowedUser")
                        .WithMany("FollowedUsers")
                        .HasForeignKey("FollowedUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "FollowingUser")
                        .WithMany("FollowingUsers")
                        .HasForeignKey("FollowingUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FollowedUser");

                    b.Navigation("FollowingUser");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.UserProfiles", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("IndieGameZone.Domain.Entities.UserProfiles", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wallets", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithOne("Wallet")
                        .HasForeignKey("IndieGameZone.Domain.Entities.Wallets", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Wishlists", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Games", "Game")
                        .WithMany("Wishlists")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.WithdrawRequests", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Transactions", "Transaction")
                        .WithOne("WithdrawRequest")
                        .HasForeignKey("IndieGameZone.Domain.Entities.WithdrawRequests", "TransactionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IndieGameZone.Domain.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Achievements", b =>
                {
                    b.Navigation("UserAchievements");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.AgeRestrictions", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Categories", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.CommercialPackages", b =>
                {
                    b.Navigation("CommercialRegistrations");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Games", b =>
                {
                    b.Navigation("CommercialRegistration");

                    b.Navigation("Discounts");

                    b.Navigation("GameImages");

                    b.Navigation("GameLanguages");

                    b.Navigation("GamePlatforms");

                    b.Navigation("GameRecommendations");

                    b.Navigation("GameTags");

                    b.Navigation("Libraries");

                    b.Navigation("Posts");

                    b.Navigation("Reports");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Languages", b =>
                {
                    b.Navigation("GameLanguages");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Platforms", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.PostComments", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Posts", b =>
                {
                    b.Navigation("PostComments");

                    b.Navigation("PostReactions");

                    b.Navigation("PostTags");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.ReportTypes", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Tags", b =>
                {
                    b.Navigation("GameTags");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Transactions", b =>
                {
                    b.Navigation("WithdrawRequest")
                        .IsRequired();
                });

            modelBuilder.Entity("IndieGameZone.Domain.Entities.Users", b =>
                {
                    b.Navigation("BanHistories");

                    b.Navigation("Coupons");

                    b.Navigation("FollowedUsers");

                    b.Navigation("FollowingUsers");

                    b.Navigation("GameRecommendations");

                    b.Navigation("Games");

                    b.Navigation("Libraries");

                    b.Navigation("Notifications");

                    b.Navigation("PostComments");

                    b.Navigation("PostReactions");

                    b.Navigation("Posts");

                    b.Navigation("ReportedUsers");

                    b.Navigation("ReportingUsers");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");

                    b.Navigation("UserAchievements");

                    b.Navigation("UserProfile")
                        .IsRequired();

                    b.Navigation("Wallet")
                        .IsRequired();

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
